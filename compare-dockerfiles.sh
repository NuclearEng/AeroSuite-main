#!/bin/bash

echo "üê≥ Docker Build Optimization Comparison"
echo "======================================"
echo ""
echo "Current Dockerfiles use chown which can slow down builds significantly."
echo ""
echo "We have created optimized versions:"
echo ""
echo "1. **Original** (current)"
echo "   - Uses COPY --chown during build"
echo "   - Uses recursive chown -R after copying files"
echo "   - Slowest but most compatible"
echo ""
echo "2. **Optimized** (.optimized)"
echo "   - Removes COPY --chown during build stage"
echo "   - Only chowns specific directories that need write access"
echo "   - Faster builds, still maintains security"
echo ""
echo "3. **Fast** (.fast)"
echo "   - No chown operations at all"
echo "   - Switches to non-root user early (server)"
echo "   - Uses default nginx user (client)"
echo "   - Fastest builds, simplest approach"
echo ""
echo "Recommendations:"
echo "- Use .fast for development and CI/CD pipelines"
echo "- Use .optimized if you need specific permission control"
echo "- Keep original as fallback if compatibility issues arise"
echo ""
echo "To use the fast version:"
echo "  cp client/Dockerfile.fast client/Dockerfile"
echo "  cp server/Dockerfile.fast server/Dockerfile"
echo ""
echo "To use the optimized version:"
echo "  cp client/Dockerfile.optimized client/Dockerfile"
echo "  cp server/Dockerfile.optimized server/Dockerfile"
echo ""
echo "To test build speed:"
echo "  time docker-compose build --no-cache"
