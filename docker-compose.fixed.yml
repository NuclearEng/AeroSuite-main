services:
  # MongoDB Database
  mongo:
    image: mongo:7-jammy
    volumes:
      - mongo-data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/init.js:ro
    ports:
      - "27017:27017"
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=aerosuite
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - aerosuite-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - redis-data:/data
    networks:
      - aerosuite-network

  # Backend API Server
  aerosuite-server:
    build:
      context: ./server
      dockerfile: Dockerfile.fixed
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://mongo:27017/aerosuite
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-dev-secret-key-change-in-production}
      - JWT_EXPIRES_IN=7d
      - EMAIL_SERVICE=smtp
      - EMAIL_USER=${EMAIL_USER:-}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD:-}
      - CLIENT_URL=http://localhost:3000
      - WORKER_COUNT=1
      - LOG_LEVEL=info
    ports:
      - "5000:5000"
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (r) => process.exit(r.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    volumes:
      - ./server/logs:/app/logs
      - ./server/uploads:/app/uploads
    networks:
      - aerosuite-network

  # Frontend Client
  aerosuite-client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:5000
    ports:
      - "3000:80"
    restart: unless-stopped
    depends_on:
      aerosuite-server:
        condition: service_healthy
    environment:
      - REACT_APP_API_URL=http://localhost:5000
    networks:
      - aerosuite-network

networks:
  aerosuite-network:
    driver: bridge

volumes:
  mongo-data:
  redis-data: