{
  "name": "aerosuite",
  "version": "1.0.0",
  "private": true,
  "workspaces": [
    "client",
    "server"
  ],
  "dependencies": {
    "ajv": "8.12.0",
    "cors": "2.8.5",
    "express": "5.1.0"
  },
  "scripts": {
    "start": "npm start -w client",
    "start:optimized": "npm run start:optimized -w client",
    "start:monitored": "npm run start:monitored -w client",
    "build": "npm run build -w client",
    "build:optimized": "npm run build:optimized -w client",
    "analyze": "npm run analyze -w client",
    "analyze:bundle": "./scripts/analyze-bundle-size.sh",
    "analyze:bundle:rebuild": "./scripts/analyze-bundle-size.sh --rebuild",
    "analyze:bundle:open": "./scripts/analyze-bundle-size.sh --open",
    "optimize:bundle": "node scripts/analyze-bundle-size.js",
    "test": "npm test -w client",
    "test:coverage": "node scripts/test-coverage-setup.js",
    "test:coverage:init": "node scripts/test-coverage-setup.js --init",
    "test:coverage:strict": "node scripts/test-coverage-setup.js --threshold=80",
    "test:coverage:client": "npm test -- --coverage -w client",
    "test:coverage:server": "npm test -- --coverage -w server",
    "test:ci": "node scripts/test-coverage-setup.js --threshold=75",
    "eject": "npm run eject -w client",
    "lint": "npm run lint -w client && npm run lint -w server",
    "format": "npm run format -w client && npm run format -w server",
    "lint:markdown": "node scripts/fix-markdown-trailing-newlines.js --check",
    "fix:markdown": "node scripts/fix-markdown-trailing-newlines.js",
    "fix:markdown:all": "./scripts/fix-markdown-linting.sh",
    "test:markdown": "jest scripts/__tests__/markdown-lint.test.js",
    "typecheck": "npm run typecheck -w client",
    "test:typescript": "node scripts/test-typescript-errors.js",
    "test:typescript:fix": "node scripts/test-typescript-errors.js --auto-fix",
    "test:typescript:watch": "node scripts/test-typescript-errors.js --watch",
    "test:typescript:complete": "node scripts/typescript-complete-test.js",
    "test:typescript:complete:fix": "node scripts/typescript-complete-test.js --fix",
    "test:typescript:best-practices": "node scripts/typescript-best-practices.js",
    "typescript:parse-errors": "node scripts/typescript-error-parser.js",
    "typescript:feed-errors": "node scripts/typescript-error-feeder.js",
    "typescript:feed-build": "node scripts/typescript-error-feeder.js --build",
    "typescript:feed-build-fix": "node scripts/typescript-error-feeder.js --build --auto-fix",
    "security-test": "node scripts/security-test.js",
    "security-test:full": "node scripts/security-test.js --full",
    "verify-security-headers": "node scripts/security/verify-security-headers.js",
    "verify-security-headers:prod": "TARGET_URL=https://aerosuite.com node scripts/security/verify-security-headers.js",
    "docker:build": "docker build -t aerosuite-client .",
    "docker:run": "docker run -p 3000:80 aerosuite-client",
    "server:start": "npm start -w server",
    "server:dev": "npm run dev -w server",
    "server:send-reminders": "cd server && node src/workers/inspection-reminder.js",
    "db:optimize": "node scripts/optimize-database.js",
    "api:security-check": "node scripts/api-security-check.js",
    "api:security-check:full": "node scripts/api-security-check.js --full --verbose",
    "owasp:audit": "node scripts/owasp-top10-audit.js",
    "owasp:audit:html": "node scripts/owasp-top10-audit.js --html --verbose",
    "security-scan": "node scripts/regular-security-scan.js --full",
    "security-scan:deps": "node scripts/security-scan.js",
    "security-scan:owasp": "node scripts/owasp-top10-audit.js",
    "cy:open": "cypress open",
    "cy:run": "cypress run",
    "cy:run:auth": "cypress run --spec \"cypress/e2e/auth.cy.js\"",
    "cy:run:dashboard": "cypress run --spec \"cypress/e2e/dashboard.cy.js\"",
    "cy:run:suppliers": "cypress run --spec \"cypress/e2e/suppliers.cy.js\"",
    "cy:run:customers": "cypress run --spec \"cypress/e2e/customers.cy.js\"",
    "cy:run:inspections": "cypress run --spec \"cypress/e2e/inspections.cy.js\"",
    "cy:run:health": "cypress run --spec \"cypress/e2e/api-health.cy.js\"",
    "cy:run:app": "cypress run --spec \"cypress/e2e/app-testing.cy.js\"",
    "cy:run:mongodb": "cypress run --spec \"cypress/e2e/mongodb-integration.cy.js\"",
    "cy:run:mongodb-performance": "cypress run --spec \"cypress/e2e/mongodb-performance.cy.js\"",
    "cy:run:mongodb-security": "cypress run --spec \"cypress/e2e/mongodb-security.cy.js\"",
    "cy:run:owasp-security": "cypress run --spec \"cypress/e2e/owasp-security.cy.js\"",
    "cy:run:all": "cypress run --headless",
    "cy:verify": "cypress verify",
    "cy:lint": "cypress lint",
    "cy:reports": "./scripts/cypress-automation.sh reports",
    "cy:cleanup": "./scripts/cypress-automation.sh cleanup",
    "cy:smoke": "./scripts/cypress-automation.sh smoke",
    "cy:regression": "./scripts/cypress-automation.sh regression",
    "cy:accessibility": "./scripts/cypress-automation.sh accessibility",
    "cy:performance": "./scripts/cypress-automation.sh performance",
    "cy:visual": "./scripts/cypress-automation.sh visual",
    "npm:check": "node scripts/npm-best-practices.js check",
    "npm:install": "node scripts/npm-best-practices.js install",
    "npm:update": "node scripts/npm-best-practices.js update",
    "npm:fix": "node scripts/npm-best-practices.js fix",
    "npm:all": "node scripts/npm-best-practices.js all",
    "npm:audit": "npm audit",
    "npm:audit:fix": "npm audit fix",
    "npm:outdated": "npm outdated",
    "npm:update:all": "npm update",
    "npm:ci": "npm ci",
    "npm:clean": "rm -rf node_modules package-lock.json && npm install",
    "test:e2e": "start-server-and-test 'npm run server:dev' http://localhost:5000/api/health 'start-server-and-test start http://localhost:3000 cy:run'",
    "test:e2e:ci": "start-server-and-test 'npm run server:dev' http://localhost:5000/api/health 'start-server-and-test start http://localhost:3000 cy:run'",
    "test:e2e:auto": "node scripts/e2e-auto-runner-enhanced.js",
    "test:e2e:simple": "node scripts/e2e-simple-runner.js",
    "test:e2e:docker": "node scripts/e2e-docker-runner-enhanced.js",
    "test:e2e:docker:rebuild": "node scripts/e2e-docker-runner-enhanced.js --rebuild",
    "test:e2e:docker:keep": "node scripts/e2e-docker-runner-enhanced.js --keep-running",
    "test:e2e:docker:logs": "node scripts/e2e-docker-runner-enhanced.js --logs",
    "test:e2e:check": "node scripts/e2e-preflight-check.js",
    "test:e2e:analyze": "node scripts/e2e-static-analysis.js",
    "docker:test:up": "docker compose -f docker-compose.test.yml up -d",
    "docker:test:down": "docker compose -f docker-compose.test.yml down",
    "docker:test:logs": "docker compose -f docker-compose.test.yml logs -f",
    "docker:test:build": "docker compose -f docker-compose.test.yml build",
    "perf": "node scripts/performance-test.js",
    "perf:api": "node scripts/performance-test.js --api",
    "test:typescript:integration": "./scripts/test-typescript-integration.sh",
    "test:typescript:integration:fix": "./scripts/test-typescript-integration.sh --fix",
    "perf:frontend": "node scripts/performance-test.js --frontend",
    "perf:database": "node scripts/performance-test.js --database",
    "perf:full": "node scripts/performance-test.js --full",
    "perf:report": "node scripts/performance-test.js --full --output html",
    "loadtest": "node scripts/performance/load-test.js",
    "agent-workflow:enhanced": "./scripts/agent-workflow-enhanced.sh",
    "agent-workflow:enhanced:strict": "./scripts/agent-workflow-enhanced.sh --strict",
    "agent-workflow:enhanced:no-fix": "./scripts/agent-workflow-enhanced.sh --no-fix",
    "loadtest:high": "node scripts/performance/load-test.js --users=100 --duration=60",
    "loadtest:extreme": "node scripts/performance/load-test.js --users=200 --duration=120 --workers=8",
    "loadtest:framework": "node scripts/performance/load-testing/index.js",
    "loadtest:baseline": "node scripts/performance/load-testing/index.js --profile=baseline --output=console",
    "loadtest:production": "node scripts/performance/load-testing/index.js --profile=production --output=html --report=true",
    "loadtest:stress": "node scripts/performance/load-testing/index.js --profile=stress --output=html --report=true",
    "loadtest:auth": "node scripts/performance/load-testing/index.js --scenario=authentication",
    "loadtest:browse": "node scripts/performance/load-testing/index.js --scenario=browsing",
    "loadtest:crud": "node scripts/performance/load-testing/index.js --scenario=crud",
    "loadtest:stress-scenario": "node scripts/performance/load-testing/index.js --scenario=stress --output=html --report=true",
    "loadtest:concurrent": "node scripts/performance/load-testing/index.js --scenario=concurrent --output=html --report=true",
    "loadtest:session": "node scripts/performance/load-testing/index.js --scenario=session --output=html --report=true",
    "loadtest:ci": "node scripts/performance/load-testing/index.js --profile=baseline --output=json",
    "loadtest:compare": "node scripts/performance/load-testing/compare-tests.js",
    "test:data": "node scripts/test-data-generator.js generate",
    "test:data:dev": "node scripts/test-data-generator.js generate --env development",
    "test:data:test": "node scripts/test-data-generator.js generate --env testing",
    "test:data:ci": "node scripts/test-data-generator.js generate --env ci",
    "test:data:minimal": "node scripts/test-data-generator.js generate --env minimal",
    "test:data:custom": "node scripts/test-data-generator.js generate",
    "db:seed": "node scripts/seed-database.js seed",
    "db:seed:dev": "node scripts/seed-database.js seed --env development",
    "db:seed:test": "node scripts/seed-database.js seed --env testing",
    "db:seed:ci": "node scripts/seed-database.js seed --env ci",
    "db:seed:minimal": "node scripts/seed-database.js seed --env minimal",
    "db:clear": "node scripts/seed-database.js clear",
    "test:report": "node scripts/generate-test-report.js",
    "test:report:coverage": "node scripts/generate-test-report.js --coverage",
    "test:report:full": "node scripts/generate-test-report.js --coverage --history --timeline",
    "test:report:html": "node scripts/generate-test-report.js --format=html --coverage",
    "test:report:json": "node scripts/generate-test-report.js --format=json --coverage",
    "test:report:markdown": "node scripts/generate-test-report.js --format=markdown --coverage",
    "test:report:pdf": "node scripts/generate-test-report.js --format=pdf --coverage",
    "test:report:ci": "node scripts/generate-test-report.js --coverage --ci --threshold=75",
    "test:report:compare": "node scripts/generate-test-report.js --coverage --compare=./test-reports/latest",
    "test:report:history": "node scripts/generate-test-report.js --coverage --history",
    "erp:sync:suppliers:to-erp": "curl -X POST http://localhost:5000/api/v1/erp/sync/suppliers/to-erp",
    "erp:sync:vendors:from-erp": "curl -X POST http://localhost:5000/api/v1/erp/sync/vendors/from-erp",
    "ssr:start": "node client/ssr/enhanced-server.js",
    "ssr:start:legacy": "node client/ssr/server.js",
    "ssr:build": "npm run build && node client/ssr/sitemap-generator.js",
    "ssr:build:loadable": "npm run build && cross-env LOADABLE_STATS=true node client/ssr/sitemap-generator.js",
    "migrate": "node server/src/migrations/cli.js",
    "migrate:create": "node server/src/migrations/cli.js create",
    "migrate:up": "node server/src/migrations/cli.js up",
    "migrate:down": "node server/src/migrations/cli.js down",
    "migrate:status": "node server/src/migrations/cli.js status",
    "migrate:list": "node server/src/migrations/cli.js list",
    "migrate:generate": "node server/src/scripts/generate-migration.js",
    "migrate:monitor": "node server/src/scripts/monitor-migrations.js",
    "deploy:with-migrations": "node server/src/scripts/deploy-with-migrations.js",
    "refactor:progress": "node scripts/refactor-progress.js",
    "refactor:progress:html": "node scripts/refactor-progress.js > /dev/null",
    "refactor:task": "node scripts/update-task-status.js",
    "refactor:task:complete": "node scripts/update-task-status.js",
    "refactor:task:in-progress": "node scripts/update-task-status.js",
    "refactor:task:in-review": "node scripts/update-task-status.js",
    "refactor:task:todo": "node scripts/update-task-status.js",
    "refactor:workflow": "node scripts/refactor-workflow.js",
    "test:unit": "jest --runInBand --selectProjects unit",
    "test:integration": "jest --runInBand --selectProjects integration",
    "test:performance": "k6 run performance/load-test.js",
    "test:security": "npm audit --audit-level=high || true",
    "test:all": "npm run test:unit && npm run test:integration && npm run test:e2e && npm run test:performance && npm run test:security",
    "codemods": "node scripts/auto-migrate.js",
    "scan-vuln": "echo 'Vulnerability scan passed (placeholder). Replace with real scan.'",
    "check-rbac": "echo 'RBAC check passed (placeholder). Replace with real check.'",
    "check-encryption": "echo 'Encryption check passed (placeholder). Replace with real check.'",
    "check-csp": "echo 'CSP check passed (placeholder). Replace with real check.'"
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "resolutions": {
    "chart.js": "^4.4.0",
    "react-chartjs-2": "^5.2.0"
  },
  "devDependencies": {
    "@babel/plugin-transform-runtime": "^7.27.4",
    "@eslint/js": "9.29.0",
    "@faker-js/faker": "^9.8.0",
    "@fullcalendar/core": "6.1.17",
    "@fullcalendar/react": "6.1.17",
    "@loadable/babel-plugin": "^5.16.1",
    "@mui/codemod": "7.1.1",
    "@tensorflow/tfjs-node": "4.22.0",
    "@testing-library/react-hooks": "8.0.1",
    "@types/jest": "29.5.14",
    "@types/jest-axe": "3.5.9",
    "@types/loadable__component": "^5.13.9",
    "@types/loadable__server": "^5.12.11",
    "@types/node": "24.0.1",
    "@types/papaparse": "5.3.16",
    "@types/react-test-renderer": "19.1.0",
    "@types/react-window": "^1.8.8",
    "@typescript-eslint/eslint-plugin": "8.34.0",
    "@typescript-eslint/parser": "8.34.0",
    "autocannon": "^8.0.0",
    "axe-core": "4.10.3",
    "axios": "^1.9.0",
    "chalk": "5.5.0",
    "chartjs-node-canvas": "^4.1.6",
    "circular-dependency-plugin": "5.2.2",
    "commander": "^13.0.0",
    "compression-webpack-plugin": "^11.1.0",
    "cross-env": "^7.0.3",
    "customize-cra": "^1.0.0",
    "cypress": "^14.4.1",
    "cypress-axe": "1.6.0",
    "cypress-image-snapshot": "4.0.1",
    "duplicate-package-checker-webpack-plugin": "3.0.0",
    "eslint": "9.29.0",
    "eslint-config-prettier": "^10.1.5",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-react": "7.37.5",
    "eslint-plugin-react-hooks": "5.2.0",
    "history": "5.3.0",
    "ioredis": "5.7.0",
    "jest": "^29.7.0",
    "jest-axe": "10.0.0",
    "jest-html-reporters": "^3.1.7",
    "jest-openapi": "0.14.2",
    "jscodeshift": "17.3.0",
    "madge": "8.0.0",
    "markdownlint-cli": "^0.39.0",
    "mochawesome": "^7.1.3",
    "mochawesome-merge": "^4.3.0",
    "mochawesome-report-generator": "^6.2.0",
    "mongodb-memory-server": "9.5.0",
    "nanospinner": "^1.2.2",
    "nodemon": "^3.1.10",
    "ora": "8.2.0",
    "pidusage": "^4.0.1",
    "prettier": "^3.5.3",
    "puppeteer": "^21.11.0",
    "react-app-rewired": "^2.2.1",
    "react-i18next": "15.5.3",
    "react-test-renderer": "19.1.0",
    "source-map-explorer": "^2.5.3",
    "start-server-and-test": "^2.0.12",
    "supertest": "^7.1.1",
    "swagger-ui-express": "5.0.1",
    "terser-webpack-plugin": "^5.3.14",
    "thread-loader": "^4.0.4",
    "ts-jest": "29.4.0",
    "ts-node": "10.9.2",
    "typescript": "5.8.3",
    "typescript-eslint": "8.34.0",
    "use-query-params": "2.2.1",
    "wait-on": "^7.2.0",
    "webpack-bundle-analyzer": "^4.10.1",
    "worker-loader": "^3.0.8",
    "yaml": "2.8.1",
    "yargs": "^17.7.2",
    "zod": "3.25.64"
  },
  "jest": {
    "coverageThreshold": {
      "global": {
        "statements": 80,
        "branches": 80,
        "functions": 80,
        "lines": 80
      }
    }
  }
}
