# AeroSuite Advanced Load Balancing Configuration
# Implements RF041 - Configure advanced load balancing strategies

# API servers upstream with IP hash for session persistence
upstream api_servers {
    # Use IP hash for session affinity (sticky sessions)
    ip_hash;
    
    # List of backend servers
    server aerosuite-server-0.aerosuite-server.aerosuite.svc.cluster.local:5000 max_fails=3 fail_timeout=30s;
    server aerosuite-server-1.aerosuite-server.aerosuite.svc.cluster.local:5000 max_fails=3 fail_timeout=30s;
    server aerosuite-server-2.aerosuite-server.aerosuite.svc.cluster.local:5000 max_fails=3 fail_timeout=30s;
    server aerosuite-server-3.aerosuite-server.aerosuite.svc.cluster.local:5000 max_fails=3 fail_timeout=30s backup;
    
    # Connection settings
    keepalive 32;
    keepalive_timeout 60s;
    keepalive_requests 100;
    
    # Health checks
    zone api_servers_zone 64k;
    
    # Slow start for newly added servers to prevent overwhelming them
    slow_start 30s;
}

# Frontend servers upstream with least connections strategy
upstream frontend_servers {
    # Use least connections for optimal distribution
    least_conn;
    
    # List of frontend servers
    server aerosuite-client-0.aerosuite-client.aerosuite.svc.cluster.local:80 weight=1 max_fails=2 fail_timeout=20s;
    server aerosuite-client-1.aerosuite-client.aerosuite.svc.cluster.local:80 weight=1 max_fails=2 fail_timeout=20s;
    
    # Connection settings
    keepalive 16;
    keepalive_timeout 60s;
    keepalive_requests 100;
    
    # Health checks
    zone frontend_servers_zone 32k;
}

# High-traffic API endpoints with weighted round-robin
upstream api_high_traffic {
    # Weighted round-robin for high-traffic endpoints
    server aerosuite-server-0.aerosuite-server.aerosuite.svc.cluster.local:5000 weight=3;
    server aerosuite-server-1.aerosuite-server.aerosuite.svc.cluster.local:5000 weight=3;
    server aerosuite-server-2.aerosuite-server.aerosuite.svc.cluster.local:5000 weight=2;
    server aerosuite-server-3.aerosuite-server.aerosuite.svc.cluster.local:5000 weight=2;
    
    # Connection settings
    keepalive 32;
    
    # Health checks
    zone api_high_traffic_zone 64k;
}

# Read-only API endpoints with least time strategy
upstream api_read_only {
    # Least time strategy for read-only endpoints
    least_time header;
    
    server aerosuite-server-0.aerosuite-server.aerosuite.svc.cluster.local:5000;
    server aerosuite-server-1.aerosuite-server.aerosuite.svc.cluster.local:5000;
    server aerosuite-server-2.aerosuite-server.aerosuite.svc.cluster.local:5000;
    server aerosuite-server-3.aerosuite-server.aerosuite.svc.cluster.local:5000;
    
    # Connection settings
    keepalive 32;
    
    # Health checks
    zone api_read_only_zone 64k;
}

# Define rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=3r/s;
limit_req_zone $binary_remote_addr zone=static_limit:10m rate=30r/s;

# Define connection limits
limit_conn_zone $binary_remote_addr zone=conn_limit:10m;

# Define HTTP request size limits
client_max_body_size 10m;
client_body_buffer_size 128k;

# Define cache zones for static content
proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=1g inactive=60m;
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=500m inactive=30m; 