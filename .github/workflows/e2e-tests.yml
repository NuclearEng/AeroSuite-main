name: End-to-End Tests

on:
  push:
    branches: [main, master]
    paths:
      - 'client/src/**/*'
      - 'server/src/**/*'
      - 'cypress/**/*'
      - 'package.json'
      - 'cypress.config.js'
      - '.github/workflows/e2e-tests.yml'
  pull_request:
    branches: [main, master]
  workflow_dispatch:
    inputs:
      spec:
        description: 'Spec to run (e.g., cypress/e2e/auth.cy.js)'
        required: false
        default: ''

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:4.4
        ports:
          - 27017:27017
      redis:
        image: redis:alpine
        ports:
          - 6379:6379
    strategy:
      fail-fast: false
      matrix:
        # Split tests into different groups for parallel execution
        group: [1, 2, 3]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
      
      # Install npm dependencies without using cache
      - name: Install dependencies
        run: |
          npm install --legacy-peer-deps
          npm run postinstall || true
      
      - name: Seed test database
        run: |
          npm run test:data:ci
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/aerosuite_test
      
      - name: Start Server
        run: |
          # Create .env file directly instead of copying from .env.example
          echo "NODE_ENV=test" > .env
          echo "PORT=5000" >> .env
          echo "MONGODB_URI=mongodb://localhost:27017/aerosuite_test" >> .env
          echo "REDIS_URL=redis://localhost:6379" >> .env
          echo "JWT_SECRET=test_secret_for_github_actions" >> .env
          echo "JWT_EXPIRES_IN=1d" >> .env
          echo "CORS_ORIGIN=http://localhost:3000" >> .env
          
          npm run server:dev &
          npx wait-on --timeout 30000 http://localhost:5000/api/health
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/aerosuite_test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test_secret_for_github_actions
      
      - name: Start Client
        run: |
          npm start &
          npx wait-on --timeout 30000 http://localhost:3000
        env:
          REACT_APP_API_URL: http://localhost:5000
          CI: false
      
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          record: true
          parallel: true
          group: "UI - Group ${{ matrix.group }}"
          spec: ${{ github.event.inputs.spec || '' }}
          config: baseUrl=http://localhost:3000,defaultCommandTimeout=10000,pageLoadTimeout=30000,requestTimeout=10000
          install: false # Skip installation as we've already installed dependencies
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_API_URL: http://localhost:5000
          SPLIT: ${{ strategy.job-total }}
          SPLIT_INDEX: ${{ strategy.job-index }}
          DEBUG: cypress:*
      
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots-${{ matrix.group }}
          path: cypress/screenshots
      
      - name: Upload videos
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-videos-${{ matrix.group }}
          path: cypress/videos
          
  generate-report:
    needs: cypress-run
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
      
      - name: Install dependencies
        run: npm install
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: cypress-artifacts
      
      - name: Generate HTML report
        run: |
          npx mochawesome-merge cypress-artifacts/cypress-results-*/mochawesome.json > mochawesome.json || echo "No test results to merge"
          npx marge mochawesome.json --reportDir public --inline || echo "No report to generate"
      
      - name: Deploy report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: success()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public
          destination_dir: reports/e2e/${{ github.run_number }} 