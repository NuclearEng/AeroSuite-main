# Task: TS348 - Status: Completed - Kubernetes deployment implementation
name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm ci --no-fund --legacy-peer-deps
      - name: Lint
        run: npm run lint || true
      - name: Run unit tests
        run: npm run test:unit
      - name: Run integration tests
        run: npm run test:integration
      - name: Run E2E tests
        run: npm run test:e2e
      - name: Run performance tests
        run: npm run test:performance
      - name: Run security tests
        run: npm run test:security
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage/
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: test-results/

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Set Docker username
        run: echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Server image
        uses: docker/build-push-action@v4
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/aerosuite-server:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/aerosuite-server:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/aerosuite-server:buildcache,mode=max
      
      - name: Build and push Client image
        uses: docker/build-push-action@v4
        with:
          context: ./client
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/aerosuite-client:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/aerosuite-client:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/aerosuite-client:buildcache,mode=max

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Set up kustomize
        uses: imranismail/setup-kustomize@v2
      
      - name: Set up kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
          chmod 600 $HOME/.kube/config
      
      - name: Set Docker username
        run: echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV
      
      - name: Deploy to development environment
        if: github.ref == 'refs/heads/develop'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          cd k8s/overlays/dev
          kustomize edit set image $DOCKER_USERNAME/aerosuite-server:latest=$DOCKER_USERNAME/aerosuite-server:latest
          kustomize edit set image $DOCKER_USERNAME/aerosuite-client:latest=$DOCKER_USERNAME/aerosuite-client:latest
          kustomize build | kubectl apply -f -
          kubectl rollout status deployment/dev-aerosuite-server -n aerosuite
          kubectl rollout status deployment/dev-aerosuite-client -n aerosuite
      
      - name: Deploy to production environment
        if: github.ref == 'refs/heads/main'
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          cd k8s/overlays/prod
          kustomize edit set image $DOCKER_USERNAME/aerosuite-server:latest=$DOCKER_USERNAME/aerosuite-server:latest
          kustomize edit set image $DOCKER_USERNAME/aerosuite-client:latest=$DOCKER_USERNAME/aerosuite-client:latest
          kustomize build | kubectl apply -f -
          kubectl rollout status deployment/prod-aerosuite-server -n aerosuite
          kubectl rollout status deployment/prod-aerosuite-client -n aerosuite 