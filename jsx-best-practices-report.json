{
  "summary": {
    "totalFiles": 367,
    "totalIssues": 1252,
    "totalGood": 5293,
    "byCategory": {},
    "bySeverity": {
      "error": 0,
      "warning": null,
      "info": 1249,
      "good": 5293,
      "errors": null,
      "warnings": null
    },
    "topIssues": [
      {
        "category": "bestPractices",
        "name": "Inline functions",
        "severity": "info",
        "message": "Inline function definitions in JSX can impact performance",
        "fix": "Extract functions outside render or use useCallback",
        "line": 521,
        "attr": "onChange",
        "count": 921,
        "files": [
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/AIAnalysisPage.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/AIAnalysisPage.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/AIAnalysisPage.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/Profile.tsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/Profile.tsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/App.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/App.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/components/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/components/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/components/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/components/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/components/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/components/SupplierMap.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Profile.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/ai-analysis/performance-dashboard/PerformanceDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/ai-analysis/performance-dashboard/PerformanceDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/ai-analysis/performance-dashboard/PerformanceDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/ai-analysis/performance-dashboard/PerformanceDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/ai-analysis/performance-dashboard/PerformanceDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/ai-analysis/performance-dashboard/PerformanceDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/ai-analysis/performance-dashboard/PerformanceDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/ai-analysis/performance-dashboard/PerformanceDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/ai-analysis/retraining-dashboard/RetrainingDashboard.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/AddCustomer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/AddCustomer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ScheduleInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ScheduleInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/AddSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/AddSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/AddSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/AddSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/AddSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/AddSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierAnalytics.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierAnalytics.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierAnalytics.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierRiskAssessment.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierRiskAssessment.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierRiskAssessment.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierRiskAssessment.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/AssessmentCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/RiskFactorCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/RiskFactorCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/RiskFactorCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/SupplierSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/SupplierSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/SupplierSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FiltersToolbar.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FiltersToolbar.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FiltersToolbar.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FiltersToolbar.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FiltersToolbar.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FormBuilder.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FormBuilder.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FormBuilder.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FormBuilder.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FormBuilder.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FormBuilder.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FormBuilder.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FormBuilder.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/Modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/Modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/Modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/Modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/Modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/Modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/Modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/inspection-form-modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/inspection-form-modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/inspection-form-modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/supplier-form-modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/supplier-form-modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/supplier-form-modal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/supplier-list-delete-dialog.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/EnhancedSSOLoginButtons.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/EnhancedSSOLoginButtons.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/SSOLoginButtons.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/TwoFactorSetup.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/TwoFactorVerification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ErrorDialog.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FileUploadModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FileUploadModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FileUploadModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/GenerateReportButton.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/GenerateReportButton.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/GenerateReportButton.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/GenerateReportButton.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/GenerateReportButton.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/KeyboardShortcutsDialog.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/LanguageSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Modal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/OfflineIndicator.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/PerformanceMonitor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/PerformanceMonitor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/PerformanceMonitor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/PerformanceMonitor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveLayoutAudit.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveLayoutAudit.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/SearchModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/SearchModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/SearchModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/SearchModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ThemeSettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/components/ComponentRelationshipGraph.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/components/ComponentRelationshipGraph.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/components/ComponentRelationshipGraph.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/components/ComponentRelationshipGraph.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/components/ComponentRelationshipGraph.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/components/ComponentRelationshipGraph.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/components/ComponentRelationshipGraph.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/components/ComponentRelationshipGraph.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/CustomWidgetManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/CustomWidgetManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/CustomWidgetManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/CustomWidgetManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/CustomWidgetManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomization.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomization.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomization.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomization.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardSyncStatus.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardSyncStatus.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/StatCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/StatCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/AnomalyDetectionWidget.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/AnomalyDetectionWidget.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/CalendarWidget.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/CalendarWidget.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/NotificationList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/NotificationList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/QualityMetricsWidget.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/QualityMetricsWidget.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/demo/HeavyComponent3.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/demo/HeavyComponent3.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/demo/HeavyComponent3.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/demo/HeavyComponent3.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/demo/TagInput.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/demo/TagInput.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/demo/TagInput.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/inspections/InspectionStatsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/inspections/InspectionStatsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/navigation/Header.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/navigation/Sidebar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/RealtimeNotifications.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/onboarding/steps/CompletionStep.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/onboarding/steps/CompletionStep.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/payments/PaymentDetails.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/payments/PaymentDetails.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/payments/PaymentDetails.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/payments/PaymentDetails.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/payments/PaymentHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierImportExport.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierImportExport.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierImportExport.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierImportExport.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierImportExport.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Dropdown.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Dropdown.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/FileUploader.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/FilterPanel.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/FilterPanel.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/FilterPanel.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/FilterPanel.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/FormStepper.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/LocationPicker.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/LocationPicker.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Modal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Pagination.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/ProgressiveForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/ProgressiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/ProgressiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/RichTextEditor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/RichTextEditor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/RichTextEditor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/RichTextEditor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/RichTextEditor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/RichTextEditor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/SearchBar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Tabs.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/forms/AutosaveForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/LazyDataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/patterns/Composition.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/layouts/MainLayout.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/AIAnalysisPage.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/AIAnalysisPage.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/AIAnalysisPage.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/Profile.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/Profile.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/SMSVerification.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ClientDataCachingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ClientDataCachingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ClientDataCachingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ClientDataCachingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ClientDataCachingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/CodeSplittingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/CodeSplittingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ComponentsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ComponentsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ComponentsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ComponentsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/NotFound.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ProgressiveLoadingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ProgressiveLoadingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResourcePrioritizationDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResourcePrioritizationDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResourcePrioritizationDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResponsiveDesignDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ai-analysis/AIAnalysisPage.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ai-analysis/AIAnalysisPage.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ai-analysis/AIAnalysisPage.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ai-analysis/AIAnalysisPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ai-analysis/AIAnalysisPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ai-analysis/AIAnalysisPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/ForgotPassword.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/Login.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/Login.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/Login.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/Login.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/Login.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/Login.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/Login.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/Register.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/Register.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/Register.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/ResendVerification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/ResendVerification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/ResetPassword.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/ResetPassword.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/ResetPassword.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/VerifyEmail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/ComponentDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/ComponentDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/ComponentDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/ComponentDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/ComponentList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/ComponentRelationshipVisualization.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/CreateComponent.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/DocumentationManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/DocumentationManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/DocumentationManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/DocumentationManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/DocumentationManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/DocumentationManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/DocumentationManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/EditComponent.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/RevisionHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/RevisionHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/RevisionHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/RevisionHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/RevisionHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/RevisionHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/RevisionHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/RevisionHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/RevisionHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/RevisionHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/RevisionHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CreateCustomer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CreateCustomer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CreateCustomer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/EditCustomer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/EditCustomer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/EditCustomer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/components/CustomerOrderList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/components/CustomerOrderList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/components/CustomerOrderList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/components/CustomerOrderList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/components/CustomerOrderList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/components/CustomerOrderList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/QualityMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/QualityMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/QualityMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ScheduleInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ScheduleInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ScheduleInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ScheduleInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ScheduleInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ScheduleInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ScheduleInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ScheduleInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/components/InspectionFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/components/InspectionFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/components/InspectionFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/BackupVerification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/BackupVerification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/BackupVerification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/BackupVerification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/BackupVerification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/BackupVerification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/payments/PaymentCancelPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/payments/PaymentCancelPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/payments/PaymentDetailPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/payments/PaymentDetailPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/payments/PaymentDetailPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/payments/PaymentSuccessPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/payments/PaymentSuccessPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/DataVisualizationDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/ReportBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/ReportBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/ReportBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/ReportBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/ReportBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/ReportBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/LanguageSettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/LanguageSettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/SettingsPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/SettingsPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAnalyticsPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAnalyticsPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAnalyticsPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierEdit.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierRiskAssessment.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierRiskAssessment.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierRiskAssessment.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierRiskAssessment.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierRiskAssessment.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierRiskAssessment.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/AuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/AuditChecklist.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/ChecklistItemCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/ChecklistItemCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/ChecklistItemCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/ChecklistItemCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/ChecklistItemCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/ChecklistItemCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/ChecklistItemCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/EnhancedDataTableDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/EnhancedDataTableDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/EnhancedDataTableDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/EnhancedDataTableDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/EnhancedDataTableDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/EnhancedDataTableDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/EnhancedSupplierForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/EnhancedSupplierForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/EnhancedSupplierForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/QualityManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/QualityManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/QualityManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/RiskFactorCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/RiskFactorCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/RiskFactorsList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierComparisonTool.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierComparisonTool.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierComparisonTool.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierComparisonTool.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierNetwork.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierNetwork.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierNetwork.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierNetwork.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierNetwork.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierNetwork.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierNetwork.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierNetwork.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierNetwork.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierPerformanceCharts.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierQualification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierQualification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierQualification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierQualification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierQualification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/user/UserSettings.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/test-utils/advanced-router-example.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/test-utils/advanced-router-example.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/utils/accessibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/utils/accessibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/src/pages/user/UserSettings.tsx"
        ]
      },
      {
        "category": "bestPractices",
        "name": "Props spreading",
        "severity": "info",
        "message": "Avoid excessive props spreading",
        "fix": "Be explicit about which props to pass",
        "line": 592,
        "count": 202,
        "files": [
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/AddSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/AddSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/SupplierSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/SupplierSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/UserAnalyticsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/AnimatedButton.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/AnimatedCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/AnimatedFeedback.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/AnimatedFeedback.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Chart.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Chart.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Chart.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Chart.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Chart.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Chart.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Chart.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Chart.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Chart.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Chart.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ConfirmationDialog.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ConfirmationDialog.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ConfirmationDialog.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/CustomMenuItem.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ErrorHandler.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ErrorHandler.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/LoadingButton.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/PerformanceWrapper.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/PerformanceWrapper.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/SkeletonLoader.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/StatusChip.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/TouchTargetWrapper.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/QualityMetricsWidget.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dnd/DndComponents.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dnd/DndComponents.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dnd/DndComponents.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/layout/Grid.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/layout/Grid.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/layout/Grid.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/layout/ResponsiveGrid.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/layout/ResponsiveGrid.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/layout/ResponsiveGrid.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/layout/ResponsiveGrid.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/layout/ResponsiveGrid.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/layout/ResponsiveGrid.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierImportExport.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierImportExport.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierImportExport.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/atoms/Button.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/atoms/Input.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/atoms/Typography.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/AccessibleModal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/AccessibleModal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/AccessibleModal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/AccessibleModal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/AccessibleModal.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Card.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/FormField.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/LazyLoadedComponent.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/LocationPicker.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/ProgressiveForm.test.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/ProgressiveForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/SkeletonScreen.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/DataGrid.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/KanbanBoard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/KanbanBoard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/KanbanBoard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/patterns/HOC.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/patterns/HOC.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/patterns/HOC.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/BundleOptimizationDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ClientDataCachingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/CodeSplittingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/CodeSplittingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ProgressiveLoadingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ProgressiveLoadingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ProgressiveLoadingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ProgressiveLoadingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ProgressiveLoadingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ProgressiveLoadingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResourcePrioritizationDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResponsiveDesignDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResponsiveDesignDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResponsiveDesignDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResponsiveDesignDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResponsiveDesignDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/ComponentDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/QualityMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/QualityMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/QualityMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/QualityMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ScheduleInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ScheduleInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/components/InspectionFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/components/InspectionFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/payments/PaymentPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/ReportBuilder.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateForm.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAudit.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAudit.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAudit.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/SettingsPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/SettingsPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAnalyticsPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAnalyticsPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAnalyticsPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/QualityManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalyticsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalyticsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalyticsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalyticsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierComparisonTool.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/utils/codeSplitting.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/utils/lazyRoute.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/utils/lazyRoute.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/utils/progressiveLoading.tsx",
          "/Users/tannercoker/AeroSuite-main-1/src/utils/codeSplitting.tsx"
        ]
      },
      {
        "category": "expressionChecks",
        "name": "Complex expressions in JSX",
        "severity": "info",
        "message": "Complex expressions in JSX reduce readability",
        "fix": "Extract complex expressions to variables or functions",
        "line": 658,
        "column": 12,
        "detail": "Nested ternary expression",
        "count": 126,
        "files": [
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/AIAnalysisPage.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/components/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/components/SupplierMap.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ConductInspection.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierAnalytics.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierAnalytics.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierRiskAssessment.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/AssessmentCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/AssessmentCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/RiskFactorCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/SupplierSelector.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/TwoFactorSetup.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/TwoFactorSetup.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/TwoFactorSetup.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/TwoFactorSetup.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/TwoFactorVerification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Chart.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ColorContrastChecker.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ErrorBoundary.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ErrorBoundary.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ErrorDialog.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ErrorDialog.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FileUploadModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FileUploadModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FileUploadModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FileUploadModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/OfflineIndicator.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/PerformanceMonitor.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveLayoutAudit.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardSyncStatus.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/AIInsightsWidget.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/AnomalyDetectionWidget.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/CalendarWidget.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/inspections/InspectionStatsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/payments/PaymentHistory.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierMetricsCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/DataTable.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/AIAnalysisPage.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/PerformanceMetricsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/BundleOptimizationDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ClientDataCachingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ClientDataCachingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ClientDataCachingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ClientDataCachingDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResponsiveDesignDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResponsiveDesignDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResponsiveDesignDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResponsiveDesignDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ai-analysis/AIAnalysisPage.jsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ai-analysis/AIAnalysisPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/VerifyEmail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/ComponentDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/DocumentationManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/DocumentationManager.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/components/CustomerFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/Dashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionDetail.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/components/InspectionFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/DataVisualizationDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/DataVisualizationDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/DataVisualizationDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/DataVisualizationDemo.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierRiskAssessment.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/ChecklistItemCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/RiskFactorCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/RiskFactorCard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalyticsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalyticsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalyticsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalyticsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalyticsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalyticsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalyticsDashboard.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierComparisonTool.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierComparisonTool.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierComparisonTool.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierFormModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierQualification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierQualification.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierSelector.tsx"
        ]
      },
      {
        "category": "attributeChecks",
        "name": "Quote consistency",
        "severity": "warning",
        "message": "Inconsistent quote usage in JSX attributes",
        "fix": "Use consistent quotes (prefer double quotes for JSX)",
        "detail": "Mixed quotes: 1 single, 65 double",
        "count": 2,
        "files": [
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FileUploadModal.tsx",
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/StatCard.tsx"
        ]
      },
      {
        "category": "securityChecks",
        "name": "dangerouslySetInnerHTML",
        "severity": "warning",
        "message": "Using dangerouslySetInnerHTML - ensure content is sanitized",
        "fix": "Sanitize content or use text content instead",
        "line": 82,
        "column": 8,
        "count": 1,
        "files": [
          "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/RichTextEditor.tsx"
        ]
      }
    ]
  },
  "details": [
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/AIAnalysisPage.jsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 658,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 521,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 648,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 653,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 210,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 278,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 325,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 336,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 482,
          "column": 133
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 514,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 525,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 542,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 550,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 556,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 558,
          "column": 57
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 559,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 566,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 633,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 646,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 651,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 658,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 672,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 677,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 687,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 694,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 701,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 201,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 205,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 272,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 343,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 470,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 473,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 479,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 482,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 490,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 492,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 504,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 506,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 520,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 544,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 552,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 569,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 569,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 585,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 602,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 616,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 628,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 663,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 663,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 326,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 337,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 661,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 49
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/AIAnalysisPage.test.jsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 10,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/DocumentManager.jsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 326,
          "column": 6,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 313,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 390,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 396,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 403,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 408,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 424,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 510,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 524,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 581,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 595,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 610,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 308,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 320,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 326,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 356,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 361,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 384,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 388,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 400,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 446,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 516,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 587,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 600,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 616,
          "column": 22
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 305,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 322,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 365,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 366,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 424,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 442,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 462,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 473,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 486,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 503,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 514,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 524,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 533,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 544,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 557,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 574,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 585,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 595,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 614,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 615,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 401,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 601,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 12,
        "good": 35
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/PerformanceMetricsDashboard.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 162,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 215,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 337,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 390,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 592
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 593
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 594
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 595
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 626
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 162,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 215,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 337,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 390,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 483,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 489,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 493,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 495,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 552,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 553,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 557,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 569,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 575,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 579,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 581,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 628,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 475,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 490,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 532,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 554,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 561,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 562,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 576,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 584,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 585,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 598,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 601,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 604,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 607,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 630,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 9,
        "good": 31
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/Profile.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 252,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 275,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 145,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 272,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 129,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 274,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 276,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 294,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 297,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/archived-code/client-not-used/SMSVerification.jsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 224,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 231,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 252,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 266,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 286,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 327,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 443,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 452,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 221,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 223,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 230,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 244,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 280,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 300,
          "column": 53
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 301,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 307,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 319,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 343,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 361,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 226,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 233,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 265,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 285,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 288,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 305,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 308,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 317,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 320,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 331,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 332,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 353,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 371,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 384,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 397,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 410,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 423,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 442,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 453,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 313,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 8,
        "good": 31
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/App.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 119,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 160,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 161,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 117,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 133,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 150,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 167,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 175,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 177,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 180,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 182,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 190,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 192,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 200,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 218,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 219,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 228,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 240,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 106,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 326,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 18
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/components/InspectionList.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 285,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 137,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 170,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 188,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 199,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 212,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 146,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 196,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 208,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 231,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 262,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 267,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 274,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 285,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 293,
          "column": 22
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 145,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/components/Sidebar.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 89,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 137,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 174,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 71,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 84,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 92,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 95,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 106,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 117,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 132,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 140,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 143,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 154,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 169,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 177,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 180,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 191,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 202,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 213,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 224,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 243,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 244,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 253,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 23
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/components/SupplierMap.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 583,
          "column": 16,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 706,
          "attr": "renderValue"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 486,
          "column": 17
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 501,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 583,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 611,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 614,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 640,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 740,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 498,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 525,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 668,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 684,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 685,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 703,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 704,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 710,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 723,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 723,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 758,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 18
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Dashboard.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 239,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 259,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 279,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 343,
          "attr": "label"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 349,
          "attr": "formatter"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 381,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 393,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 416,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 439,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 397,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 426,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 310,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 336,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 405,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 9,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/NotFound.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Profile.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 264,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 80,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 116,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 126,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 147,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 157,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 167,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 197,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 212,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 225,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 238,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 251,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 13
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/Settings.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 116,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 131,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 168,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 90,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 146,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 176,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/ai-analysis/performance-dashboard/PerformanceDashboard.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 168,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 177,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 185,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 194,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 202,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 210,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 212,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 213,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 215,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 216,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 218,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 227,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 233,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 168,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 177,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 185,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 194,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 202,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 210,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 216,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 217,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 220,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 228,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 8,
        "good": 15
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/ai-analysis/retraining-dashboard/RetrainingDashboard.jsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 171,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 148,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 150,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 164,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 177,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 184,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 186,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 190,
          "column": 52
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 152,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 158,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 158,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 170,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 173,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 175,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 179,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 181,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 181,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 182,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 182,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 183,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 183,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 186,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 178,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 22
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/AddCustomer.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 170,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 330,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 178,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 184,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 186,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 190,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 205,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 217,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 231,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 250,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 257,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 269,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 276,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 295,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 306,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 319,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 14
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerDetail.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 239,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 89,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 104,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 124,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 210,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 223,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 259,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 149,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 161,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 173,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 217,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 239,
          "column": 26
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 174,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 7,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/customers/CustomerList.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 148,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 162,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 231,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 258,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 306,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 155,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 207,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 224,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 246,
          "column": 26
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 157,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 176,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 177,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 189,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 198,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 211,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 275,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 292,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 293,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 294,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 295,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 302,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 304,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 317,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 324,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 210,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 5,
        "good": 20
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ConductInspection.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 303,
          "column": 28,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 317,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 454,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 503,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 513,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 524,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 540,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 552,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 591,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 604,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 277,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 303,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 337,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 435,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 257,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 358,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 359,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 365,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 372,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 380,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 453,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 480,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 481,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 488,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 495,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 512,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 528,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 539,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 618,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 620,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 621,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 10,
        "good": 21
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/Dashboard.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 313,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 326,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 427,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 435,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 74,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 252,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 255,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 273,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 320,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 323,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 471,
          "column": 17
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 472,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 46,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 49,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 103,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 107,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 153,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 157,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 371,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 374,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 378,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 447,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 454,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 462,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 480,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 483,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 486,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 489,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 489,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 25
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionConductor.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 405,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 475,
          "column": 20,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 312,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 339,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 354,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 367,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 385,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 505,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 519,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 560,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 576,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 582,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 598,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 604,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 621,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 629,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 635,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 647,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 656,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 667,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 682,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 696,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 286,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 295,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 333,
          "column": 39
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 380,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 391,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 405,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 414,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 420,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 475,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 544,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 713,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 717,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 727,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 535,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 552,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 647,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 698,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 709,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 710,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 723,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 725,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 22,
        "good": 21
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionDetail.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 265,
          "column": 22,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 279,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 138,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 153,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 180,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 191,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 176,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 186,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 193,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 221,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 231,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 237,
          "column": 44
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 241,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 260,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 265,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 279,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 297,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 366,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 378,
          "column": 16
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 13
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionList.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 328,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 337,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 352,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 370,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 388,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 405,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 424,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 449,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 459,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 468,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 478,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 488,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 511,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 530,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 540,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 559,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 442,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 502,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 592,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 593,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 594,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 595,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 16,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/InspectionSchedule.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 397
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 422
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 444
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 469
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 304,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 393,
          "attr": "getOptionLabel"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 394,
          "attr": "renderOption"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 411,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 420,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 440,
          "attr": "getOptionLabel"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 441,
          "attr": "renderOption"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 458,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 467,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 576,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 585,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 593,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 607,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 627,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 637,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 312,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 327,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 341,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 358,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 373,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 492,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 496,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 513,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 524,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 534,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 544,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 559,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 625,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 640,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 19,
        "good": 14
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/inspections/ScheduleInspection.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 168,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 325,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 176,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 182,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 239,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 259,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 184,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 189,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 204,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 217,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 230,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 250,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 277,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 296,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 311,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 13
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/AddSupplier.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 378
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 400
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 230,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 374,
          "attr": "getOptionLabel"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 375,
          "attr": "renderOption"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 392,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 398,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 460,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 238,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 244,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 366,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 246,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 250,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 265,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 277,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 291,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 311,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 318,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 330,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 337,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 358,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 425,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 436,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 449,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 8,
        "good": 16
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierAnalytics.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 556,
          "column": 28,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 596,
          "column": 30,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 380,
          "attr": "label"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 411,
          "attr": "label"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 508,
          "attr": "formatter"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 343,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 445,
          "column": 27
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 446,
          "column": 25
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 556,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 596,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 607,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 294,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 376,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 407,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 436,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 470,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 472,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 485,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 487,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 502,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 5,
        "good": 15
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierDetail.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 252,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 90,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 105,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 125,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 223,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 236,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 272,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 150,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 162,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 174,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 186,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 230,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 252,
          "column": 26
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 187,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 7,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierList.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 155,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 169,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 217,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 233,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 249,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 290,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 318,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 366,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 162,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 265,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 283,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 306,
          "column": 26
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 164,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 183,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 184,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 196,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 205,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 269,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 335,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 352,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 353,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 354,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 355,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 362,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 364,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 377,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 384,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 268,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 8,
        "good": 20
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierNetwork.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 61,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/SupplierRiskAssessment.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 153,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 102,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 121,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 132,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 220,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 74,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 80,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 153,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 161,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 197,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 76,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 82,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 91,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 92,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 93,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 101,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 110,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 111,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 112,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 113,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 120,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 131,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 166,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 175,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 207,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 208,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 209,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 219,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 221,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 222,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 223,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 224,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 225,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 5,
        "good": 28
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/AssessmentCard.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 29,
          "column": 18,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 41,
          "column": 20,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 68,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 29,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 39,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 41,
          "column": 20
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/RiskFactorCard.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 51,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 46,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 65,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 70,
          "attr": "valueLabelFormat"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 51,
          "column": 12
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/RiskFactorsList.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 25,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 26,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 27,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 28,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 14,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/SaveConfirmationDialog.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 32,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 25,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 25,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 51,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 52,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/aerosuite-demo/src/pages/suppliers/components/SupplierSelector.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 43,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 26
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 36
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 21,
          "attr": "getOptionLabel"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 24,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 35,
          "attr": "renderOption"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 41,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 43,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 49,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 20,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 22,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 23,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/App.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 55,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 48,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/SimpleApp.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 37,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/Chart.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 83,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 105,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 127,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 149,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 180,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 216,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 217,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 236,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 251,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 266,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/DataTable.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 24,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 25,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 63,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 78,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 79,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 82,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 109,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 137,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 138,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 162,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 163,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 190,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 191,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 207,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 208,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 17
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/ErrorBoundary.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 30,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 70,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FiltersToolbar.test.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 49,
          "attr": "onFilterChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 208,
          "attr": "onFilterChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 233,
          "attr": "onFilterChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 245,
          "attr": "onFilterChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 267,
          "attr": "onFilterChange"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 48,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 71,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 72,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 92,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 93,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 117,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 118,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 145,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 146,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 176,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 177,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 206,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 207,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 231,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 232,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 244,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 266,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 5,
        "good": 17
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/FormBuilder.test.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 117,
          "attr": "onSubmit"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 179,
          "attr": "onSubmit"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 214,
          "attr": "onSubmit"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 251,
          "attr": "onSubmit"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 270,
          "attr": "onSubmit"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 283,
          "attr": "onSubmit"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 299,
          "attr": "onSubmit"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 319,
          "attr": "onSubmit"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 115,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 116,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 143,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 144,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 145,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 177,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 178,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 212,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 213,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 249,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 250,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 268,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 269,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 281,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 282,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 297,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 298,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 317,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 318,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 8,
        "good": 19
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/LoadingButton.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 13,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 14,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 74,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 87,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/Modal.test.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 11,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 27,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 88,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 105,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 124,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 152,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 169,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 45,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 66,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 128,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 127,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 7,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/PageHeader.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 15,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 16,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 73,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 67,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/components/StatusBadge.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 12,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 13,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/confirm-dialog.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 14,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 15,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/customer-form-modal.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 21,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 21,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 36,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 36,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/delete-confirmation-modal.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 14,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 15,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/inspection-form-modal.test.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 31,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 31,
          "attr": "onSave"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 40,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 40,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/supplier-form-modal.test.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 17,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 17,
          "attr": "onSave"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 28,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 28,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/supplier-list-delete-dialog.test.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 20,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 33,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/__tests__/test-utils.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 56,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 57,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 61,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/ErrorAnalyticsDashboard.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 428,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 384,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 402,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 404,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 415,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 421,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 496,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 508,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 521,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 429,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/FeatureFlagsManager.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 413,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 427,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 447,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 303,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 335,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 352,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 367,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 412,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 465,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 475,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 501,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 512,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 521,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 531,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 544,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 568,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 601,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 610,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 296,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 311,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 314,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 321,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 393,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 397,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 413,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 424,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 427,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 447,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 492,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 293,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 294,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 316,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 334,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 350,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 365,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 379,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 403,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 406,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 444,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 445,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 490,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 562,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 584,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 593,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 594,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 613,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 18,
        "good": 28
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/admin/UserAnalyticsDashboard.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 196
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 198,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 725,
          "column": 26
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 198,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 367,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 385,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 387,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 398,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 404,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 486,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 486,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 494,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 503,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 516,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 593,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 602,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 616,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 661,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 668,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 670,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 690,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 721,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 21
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/EnhancedSSOLoginButtons.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 175,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 207,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 155,
          "column": 25
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 156,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 159,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 166,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 143,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 172,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 203,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/SSOLoginButtons.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 112,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/TwoFactorSetup.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 257,
          "column": 15,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 261,
          "column": 8,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 371,
          "column": 18,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 380,
          "column": 10,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 273,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 192,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 257,
          "column": 15
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 261,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 352,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 363,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 366,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 371,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 378,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 380,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 111,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 111,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 194,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 214,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 272,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 304,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 307,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 344,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 346,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 347,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 354,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 364,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 5,
        "good": 21
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/auth/TwoFactorVerification.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 91,
          "column": 16,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 103,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 74,
          "column": 32
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 82,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 88,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 91,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 146,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 161,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 163,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 74,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 80,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 84,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 102,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 112,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 125,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 126,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 130,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 142,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 144,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 154,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 154,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 89,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 116,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 21
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/AccessibilityAudit.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 159,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 165,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 167,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 170,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 181,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 187,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 194,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 238,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 244,
          "column": 69
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 249,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 310,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 321,
          "column": 26
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 163,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 164,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 173,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 183,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 293,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 250,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 18
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/AccessibilityThemeDemo.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 161,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 166,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 187,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 188,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 219,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 95,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 122,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 140,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 141,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 173,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/AnimatedButton.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 231
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 233,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 216,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 240,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/AnimatedCard.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 99
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 101,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 106,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 119,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 97,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 98,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 104,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 111,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 116,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 121,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/AnimatedFeedback.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 168
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 195
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 170,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 175,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 197,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 203,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 175,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 176,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 203,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 204,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ApiVersionWarningBanner.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 87,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 91,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 70,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 88,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 95,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Chart.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 276,
          "column": 8,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 200
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 202
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 204
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 206
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 208
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 210
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 212
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 214
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 216
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 237
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 250,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 252,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 257,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 276,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 254,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 259,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 282,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 286,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 11,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ColorContrastChecker.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 324,
          "column": 24,
          "detail": "Nested ternary expression"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 126,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 263,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 301,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 324,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 354,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 355,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 370,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 371,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 386,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 387,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 402,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 403,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 411,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 128,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 142,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 143,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 204,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 205,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 259,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 266,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 414,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 21
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ConfirmationDialog.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 165
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 228
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 238
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 183,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 208,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 146,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 147,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 148,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 149,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 150,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 151,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 178,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 180,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 187,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 215,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 218,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 225,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 226,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 227,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 230,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 234,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 235,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 236,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 240,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 21
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/CustomMenuItem.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 20
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 21,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataTable.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 826,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 990,
          "column": 20,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 1368,
          "column": 28,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 749,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 830,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 861,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 895,
          "attr": "onMouseDown"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1041,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1096,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1097,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1125,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1147,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1247,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1260,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1293,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1301,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1309,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1369,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1372,
          "attr": "renderValue"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1400,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 1416,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 626,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 638,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 650,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 696,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 711,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 725,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 734,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 764,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 771,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 788,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 792,
          "column": 32
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 793,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 811,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 812,
          "column": 34
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 826,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 829,
          "column": 36
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 832,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 839,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 841,
          "column": 32
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 857,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 858,
          "column": 37
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 863,
          "column": 32
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 878,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 931,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 942,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 945,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 955,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 965,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 978,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 990,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1042,
          "column": 31
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1088,
          "column": 32
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1113,
          "column": 40
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1122,
          "column": 38
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1131,
          "column": 42
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1143,
          "column": 32
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1166,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1193,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1215,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1246,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1255,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1268,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1292,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1300,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1308,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1323,
          "column": 13
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1344,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1368,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1434,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 645,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 654,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 655,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 656,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 678,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 701,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 715,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 717,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 727,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 736,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 746,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 766,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 780,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 794,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 840,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 944,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 951,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 976,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 980,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1001,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1016,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1021,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1022,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1038,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1040,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1043,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1045,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1092,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1119,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1180,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1218,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1221,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1222,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1223,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1224,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1231,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1233,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1259,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1276,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1277,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1280,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1320,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1321,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1324,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1423,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1436,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 636,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 963,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 988,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 1029,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 21,
        "good": 99
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DataVisualization.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 350,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 359,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 361,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 373,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 403,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 405,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 406,
          "column": 77
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 414,
          "column": 27
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 415,
          "column": 74
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 308,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 321,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 323,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 325,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 327,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 329,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 331,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 333,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 335,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 337,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 347,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 351,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 368,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 375,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 375,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 387,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 389,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 394,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 394,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 394,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 406,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 415,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 31
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/DeleteConfirmationModal.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 62,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 101,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 129,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 132,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 61,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 72,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 76,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 82,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 103,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 107,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 117,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 118,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 122,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 125,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 126,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 16
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/EmptyState.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 30,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ErrorAlert.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 57,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 76,
          "column": 15
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 52,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 55,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 62,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 75,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 89,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 90,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ErrorBoundary.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 141,
          "column": 16,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 159,
          "column": 28,
          "detail": "Nested ternary expression"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 141,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 156,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 159,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 176,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 178,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 184,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 185,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 188,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 149,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 155,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 189,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 12
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ErrorDialog.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 121,
          "column": 19,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 131,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 191,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 121,
          "column": 19
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 131,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 142,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 153,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 155,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 161,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 162,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 165,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 186,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 196,
          "column": 22
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 103,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 104,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 105,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 106,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 112,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 114,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 139,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 152,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 158,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 190,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 203,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 166,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 22
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ErrorHandler.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 79
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 80
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 46,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 47,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 49,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 51,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 57,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 60,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 61,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 62,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 56,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ErrorState.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 19,
          "column": 13
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 21,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 27,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeatureFlagWrapper.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 40,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 32,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 40,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 44,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 44,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackForm.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 191,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 200,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 224,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 233,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 277,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 317,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 334,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 346,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 357,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 398,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 423,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 431,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 440,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 449,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 203,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 212,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 218,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 308,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 375,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 459,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 470,
          "column": 22
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 178,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 190,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 211,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 223,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 232,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 243,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 244,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 245,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 249,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 249,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 250,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 261,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 276,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 316,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 333,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 345,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 364,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 366,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 383,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 422,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 430,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 439,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 448,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 460,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 469,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 477,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 478,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 479,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 483,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 483,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 484,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 14,
        "good": 38
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FeedbackWidget.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 85,
          "column": 53
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 88,
          "column": 15
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 89,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 102,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 103,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 104,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 115,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 124,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 125,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 84,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FileUploadModal.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 583,
          "column": 20,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 625,
          "column": 30,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 636,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 672,
          "column": 10,
          "detail": "Nested ternary expression"
        },
        {
          "category": "attributeChecks",
          "name": "Quote consistency",
          "severity": "warning",
          "message": "Inconsistent quote usage in JSX attributes",
          "fix": "Use consistent quotes (prefer double quotes for JSX)",
          "detail": "Mixed quotes: 1 single, 65 double"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 532,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 556,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 648,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 433,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 480,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 484,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 491,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 502,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 513,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 520,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 523,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 548,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 549,
          "column": 36
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 565,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 583,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 608,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 625,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 636,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 657,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 672,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 675,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 679,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 683,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 408,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 409,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 418,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 423,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 424,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 435,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 460,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 463,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 464,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 465,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 474,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 475,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 477,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 499,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 508,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 530,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 533,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 555,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 557,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 573,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 649,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 669,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 670,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 680,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 606,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 7,
        "good": 46,
        "warning": null
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FilterModal.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 294,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 310,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 331,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 354,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 356,
          "attr": "renderValue"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 387,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 417,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 432,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 454,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 477,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 483,
          "attr": "valueLabelFormat"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 496,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 584,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 630,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 293,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 353,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 363,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 466,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 468,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 527,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 543,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 612,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 631,
          "column": 19
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 286,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 307,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 327,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 327,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 329,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 349,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 349,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 351,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 362,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 382,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 384,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 384,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 409,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 411,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 452,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 465,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 499,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 514,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 515,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 518,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 526,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 529,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 537,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 548,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 549,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 550,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 559,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 571,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 581,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 599,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 622,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 14,
        "good": 40
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FiltersToolbar.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 579
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 312,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 320,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 338,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 340,
          "attr": "renderValue"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 367,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 369,
          "attr": "renderValue"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 402,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 419,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 440,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 456,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 481,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 499,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 524,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 547,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 639,
          "attr": "onDelete"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 640,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 771,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 345,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 351,
          "column": 57
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 383,
          "column": 57
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 439,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 455,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 495,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 598,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 629,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 656,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 674,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 690,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 696,
          "column": 17
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 704,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 705,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 708,
          "column": 17
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 710,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 717,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 774,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 782,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 814,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 310,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 333,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 361,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 399,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 400,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 477,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 545,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 600,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 601,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 602,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 603,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 604,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 619,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 641,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 659,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 660,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 676,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 679,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 694,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 695,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 707,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 745,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 747,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 795,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 796,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 818,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 815,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 18,
        "good": 47
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/FormBuilder.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 666
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 682
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 694
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 816
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 1075
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 1087
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 586,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 616,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 617,
          "attr": "onBlur"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 711,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 712,
          "attr": "onBlur"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 733,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 734,
          "attr": "onBlur"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 756,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 757,
          "attr": "onBlur"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 777,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 796,
          "attr": "getOptionLabel"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 801,
          "attr": "isOptionEqualToValue"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 810,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 814,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 820,
          "attr": "onBlur"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 559,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 560,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 567,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 590,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 593,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 605,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 614,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 621,
          "column": 27
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 623,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 637,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 644,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 650,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 651,
          "column": 65
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 667,
          "column": 17
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 695,
          "column": 17
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 853,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 860,
          "column": 57
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 882,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 889,
          "column": 36
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 954,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 956,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 961,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 970,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1009,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1011,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1016,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1070,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 1081,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 860,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 869,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 874,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 889,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 898,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 903,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 920,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 928,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 942,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 946,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 952,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 958,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 963,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 974,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 982,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 998,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1073,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1074,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1077,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1086,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 1089,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 558,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 582,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 1069,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 21,
        "good": 52
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/GenerateReportButton.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 152,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 156,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 171,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 180,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 222,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 164,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 194,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 196,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 201,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 135,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 137,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 138,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 139,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 142,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 148,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 149,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 150,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 162,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 162,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 170,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 179,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 187,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 187,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 191,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 193,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 203,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 204,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 211,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 217,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 233,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 235,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 238,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 239,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 242,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 133,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 5,
        "good": 31
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/GlobalEnhancements.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 121,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 121,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/KeyboardNavigableDemo.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 103,
          "column": 27
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 111,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 140,
          "column": 27
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 148,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 207,
          "column": 33
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 218,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 100,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 105,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 142,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 164,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 165,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 187,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 202,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 209,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 209,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 220,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 17
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/KeyboardShortcutsDialog.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 136,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 162,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 90,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 91,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 123,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 135,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 205,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 259,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/LanguageSelector.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 106,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 71,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 73,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 75,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 84,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 85,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 95,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 97,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 70,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/LineChart.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/LoadingButton.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 50
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 52,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 28,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 37,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 39,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 54,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 56,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 53,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/LoadingIndicator.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 25,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 24,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 54,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 69,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 23,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/LoadingState.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 16,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/LocalizationDemo.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 54,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/Modal.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 113,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 102,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 110,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 132,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 134,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 78,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 79,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 80,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 82,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 104,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 128,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 129,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 138,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 141,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 145,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 146,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 147,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 149,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 135,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 19
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/OfflineIndicator.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 192,
          "column": 14,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 226,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 146,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 176,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 178,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 189,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 192,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 200,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 206,
          "column": 33
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 142,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 145,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 152,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 154,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 159,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 171,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 172,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 181,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 206,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 138,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 201,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 18
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/OptimizedImage.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 147,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 158,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 137,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 144,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 169,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 170,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 171,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 172,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 173,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/PageHeader.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 53,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 65,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 111,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 118,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 56,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 74,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 82,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 83,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 113,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 126,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/PaginationFooter.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 25,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 26,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 27,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/PerformanceMonitor.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 264,
          "column": 8,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 171,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 225,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 236,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 282,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 227,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 264,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 278,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 231,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 249,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 250,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 310,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 314,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 317,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 349,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 5,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/PerformanceWrapper.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 94
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 95
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 80,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 77,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 77,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 80,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 179,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 185,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ProgressiveDataTable.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 140,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 180,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 189,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 100,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 130,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 149,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 149,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 175,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResourcePrioritization.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 89,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 115,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 116,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 117,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 89,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveCard.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 99
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 102,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 104,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 106,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 113,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 134,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 139,
          "column": 15
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 152,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 95,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 96,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 97,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 98,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 110,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 117,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 119,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 122,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 147,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 148,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 159,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 19
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveForm.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 455
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 294,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 295,
          "attr": "onBlur"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 338,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 339,
          "attr": "onBlur"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 389,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 433,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 434,
          "attr": "onBlur"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 232,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 249,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 297,
          "column": 25
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 307,
          "column": 19
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 308,
          "column": 21
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 329,
          "column": 19
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 330,
          "column": 21
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 356,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 358,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 381,
          "column": 21
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 396,
          "column": 39
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 401,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 403,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 425,
          "column": 21
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 435,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 440,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 442,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 456,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 457,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 465,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 482,
          "column": 22
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 282,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 283,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 284,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 285,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 286,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 296,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 299,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 318,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 319,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 320,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 321,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 322,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 327,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 370,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 371,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 372,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 373,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 374,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 379,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 415,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 416,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 417,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 418,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 419,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 423,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 456,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 457,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 459,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 460,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 469,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 471,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 473,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 486,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 8,
        "good": 54
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveLayoutAudit.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 312,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 327,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 338,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 312,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 225,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 257,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 259,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 284,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 287,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 296,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 296,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 317,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 326,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 337,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ResponsiveTable.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 339,
          "column": 22,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 491,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 249
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 422
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 468
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 489
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 363,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 389,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 428,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 475,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 527,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 239,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 259,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 287,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 321,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 324,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 339,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 349,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 368,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 384,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 405,
          "column": 15
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 408,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 411,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 421,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 424,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 427,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 457,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 470,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 480,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 491,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 500,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 522,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 529,
          "column": 15
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 216,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 222,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 236,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 236,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 258,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 289,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 313,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 314,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 371,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 404,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 406,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 454,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 456,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 506,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 350,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 11,
        "good": 37
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ScreenReaderCompatibility.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 59
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 119
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 120
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 121
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 122
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 123
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 331,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 339,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 545,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 551,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 557,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 563,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 569,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 61,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 354,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 63,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 113,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 114,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 126,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 191,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 313,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 330,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 347,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 356,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 360,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 413,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 583,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 13,
        "good": 14
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/SearchModal.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 218,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 269,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 303,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 325,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 216,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 219,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 220,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 221,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 222,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 242,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 248,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 254,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 265,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 285,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 291,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 293,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 306,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 313,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 315,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 331,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 167,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 168,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 171,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 188,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 189,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 190,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 199,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 211,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 218,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 250,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 257,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 302,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 304,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 324,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 327,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 343,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 32
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/SkeletonLoader.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 29
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 192,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 193,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 194,
          "column": 21
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 195,
          "column": 17
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 197,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 28,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 43,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 58,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 74,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 90,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 171,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 180,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 190,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 216,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 300,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 300,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 300,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 52,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 68,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 84,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 100,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 140,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 22
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/StatusBadge.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 68,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 71,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/StatusChip.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 76
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 76,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 76,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/ThemeSettings.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 190,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 160,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 193,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 213,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 254,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 298,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 156,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 128,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 297,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/TouchTargetWrapper.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 85
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 84,
          "column": 9
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 87,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/common/VirtualizedList.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 255,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 188,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 203,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 210,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 218,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 220,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 222,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 236,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/components/ComponentRelationshipGraph.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 210,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 249,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 271,
          "attr": "renderValue"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 319,
          "attr": "renderValue"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 388,
          "attr": "nodeCanvasObject"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 431,
          "attr": "nodePointerAreaPaint"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 443,
          "attr": "onNodeClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 448,
          "attr": "onEngineStop"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 235,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 256,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 376,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 215,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 233,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 237,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 244,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 268,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 269,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 275,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 276,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 290,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 290,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 316,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 317,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 323,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 338,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 338,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 362,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 363,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 378,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 379,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 382,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 383,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 386,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 387,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 257,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 8,
        "good": 27
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/customers/ActivityFilters.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 45,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 46,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 60,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/customers/ActivityHistoryHeader.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 31,
          "column": 50
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/customers/ActivityTimeline.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 51,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 42,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 54,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 65,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 67,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/customers/ActivityTimelineItem.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 142,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 150,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 157,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 166,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 174,
          "column": 20
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 168,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/customers/CustomerActivityHistory.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 68,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 86,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 64,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 65,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 70,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 71,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 72,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 80,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 82,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 83,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 88,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 90,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 13
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/customers/CustomerCard.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 29,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 21,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 21,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 22,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 23,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 27,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 29,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/AddQualityMetricsButton.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 46,
          "column": 19
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 53,
          "column": 19
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 57,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 49,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 52,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 55,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/CustomWidgetManager.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 81,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 96,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 106,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 148,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 159,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 125,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 144,
          "column": 37
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 149,
          "column": 28
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 95,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 118,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 177,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 178,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 184,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 185,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 5,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomization.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 242,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 258,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 313,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 334,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 314,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 316,
          "column": 22
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 132,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 133,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 143,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 166,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 169,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 169,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 181,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 190,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 192,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 214,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 281,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 13
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizeButton.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 28,
          "column": 21
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 30,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 36,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 44,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 47,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 50,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 46,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardCustomizer.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 271
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 285
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 309
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 167,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 197,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 211,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 221,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 235,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 248,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 254,
          "attr": "valueLabelFormat"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 290,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 296,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 365,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 375,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 379,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 168,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 169,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 234,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 291,
          "column": 32
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 322,
          "column": 30
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 150,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 165,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 177,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 241,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 267,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 281,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 349,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 357,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 365,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 374,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 381,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 15,
        "good": 16
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardLayout.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 58,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 80,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 87,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardSyncStatus.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 46,
          "column": 6,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 75,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 84,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 46,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 70,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 66,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 76,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 85,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 100,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/DashboardWidget.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 99,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 128,
          "column": 17
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 147,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 113,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 118,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 126,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/StatCard.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 137,
          "attr": "onMouseEnter"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 138,
          "attr": "onMouseLeave"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 148,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 168,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 178,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 186,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 188,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 194,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 152,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 169,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 182,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 194,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 194,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 12
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/AIInsightsWidget.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 326,
          "column": 8,
          "detail": "Nested ternary expression"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 112,
          "column": 33
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 114,
          "column": 35
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 326,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 341,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 304,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 305,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 312,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 313,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 319,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 319,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 331,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/ActivityFeed.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 36,
          "column": 60
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 28,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 36,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/AnomalyDetectionWidget.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 462,
          "column": 6,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 325,
          "attr": "tickFormatter"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 333,
          "attr": "dot"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 301,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 462,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 533,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 550,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 316,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 339,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 340,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 392,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 422,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 423,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 436,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 438,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 450,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 452,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 467,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 518,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 519,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 17
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/CalendarWidget.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 123,
          "column": 8,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 117,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 161,
          "attr": "eventContent"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 116,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 123,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 178,
          "column": 20
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 103,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 124,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 128,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 132,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 139,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 140,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 141,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 147,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 148,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 12
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/CustomWidgetBuilder.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 335,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 338,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 368,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 445,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 448,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 451,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 144,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 197,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 198,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 210,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 211,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 288,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 298,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 309,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 328,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 345,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 361,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 428,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 430,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 431,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 455,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 464,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 22
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/NotificationList.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 39,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 44,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 38,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 43,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 58,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 37,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 57,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/PerformanceMetricsDashboard.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 162,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 215,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 337,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 390,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 592
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 593
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 594
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 595
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 626
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 162,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 215,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 337,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 390,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 483,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 489,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 493,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 495,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 552,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 553,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 557,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 569,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 575,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 579,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 581,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 628,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 475,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 490,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 532,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 554,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 561,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 562,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 576,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 584,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 585,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 598,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 601,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 604,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 607,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 630,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 9,
        "good": 31
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/QualityMetricsWidget.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 89
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 328,
          "attr": "label"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 337,
          "attr": "formatter"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 91,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 181,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 202,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 205,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 226,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 239,
          "column": 61
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 249,
          "column": 61
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 259,
          "column": 61
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 269,
          "column": 61
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 290,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 93,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 191,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 193,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 204,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 213,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 214,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 228,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 278,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 279,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 297,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 319,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 295,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 22
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/RecentItems.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 36,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 39,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 28,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 38,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/StatCard.tsx",
      "issues": [
        {
          "category": "attributeChecks",
          "name": "Quote consistency",
          "severity": "warning",
          "message": "Inconsistent quote usage in JSX attributes",
          "fix": "Use consistent quotes (prefer double quotes for JSX)",
          "detail": "Mixed quotes: 2 single, 5 double"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 24,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 26,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 28,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 29,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 29,
          "column": 63
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 24,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 25,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 29,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 33,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 9,
        "warning": null
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dashboard/widgets/UpcomingInspections.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 133,
          "column": 12
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/demo/FormHeader.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 19,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 22,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 17,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/demo/HeavyComponent2.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 75,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 77,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 96,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 132,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 133,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 134,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 135,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/demo/HeavyComponent3.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 157,
          "attr": "onKeyDown"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 170,
          "attr": "onDelete"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 189,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 217,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 215,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 222,
          "column": 20
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 109,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 117,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 127,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 139,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 146,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 168,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 169,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 185,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 186,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/demo/TagInput.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 54,
          "attr": "onKeyDown"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 67,
          "attr": "onDelete"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 86,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 35,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 36,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 43,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 65,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 66,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 82,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 83,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/dnd/DndComponents.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 18
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 25
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 36
        }
      ],
      "good": [],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 0
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/inspections/InspectionCard.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 31,
          "column": 15
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 37,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 40,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 33,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 42,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/inspections/InspectionForm.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 54,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 64,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 73,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/inspections/InspectionStatsDashboard.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 238,
          "column": 28,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 174,
          "attr": "label"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 203,
          "attr": "label"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 238,
          "column": 28
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 170,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 199,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/layout/Grid.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 76
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 96
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 104
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 78,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 98,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 104,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 104,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/layout/ResponsiveGrid.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 68
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 82
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 83
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 84
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 105
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 135
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 65,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 66,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 67,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 90,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 101,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 102,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 103,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 104,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 107,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/layout/ResponsiveLayout.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 123,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 166,
          "column": 28
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 90,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 94,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 100,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 101,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 112,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 113,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 117,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 122,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 123,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 124,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 152,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 165,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 166,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 167,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 16
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/monitoring/PerformanceBudgetsDashboard.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 205,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 207,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 171,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 172,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 173,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 198,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 198,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 215,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/monitoring/PerformanceRegressionsDashboard.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 226,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 240,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 265,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 356,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 378,
          "column": 34
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 379,
          "column": 33
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 380,
          "column": 34
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 218,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 218,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 241,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 304,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 306,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 309,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 309,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 309,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 316,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 316,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 325,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 344,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 346,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 20
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/navigation/Header.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 509,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 291,
          "column": 21
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 330,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 332,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 376,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 463,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 292,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 312,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 313,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 314,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 315,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 316,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 331,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 340,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 342,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 345,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 355,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 357,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 361,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 371,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 373,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 389,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 390,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 400,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 401,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 402,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 413,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 419,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 425,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 432,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 441,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 442,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 452,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 453,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 467,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 468,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 479,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 487,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 488,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 498,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 499,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 524,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 41
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/navigation/MonitoringNavigation.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 77,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/navigation/NotificationItem.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 67,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/navigation/Sidebar.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 357,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 375,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 387,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 407,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 419,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 420,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 444,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 458,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 483,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 494,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 356,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 457,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 520,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 521,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 522,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 541,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 348,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 376,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 434,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 18
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/navigation/TopBar.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 25,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 36,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 36,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationCenter.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 480,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 509,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 563,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 573,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 583,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 593,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 607,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 617,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 642,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 652,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 662,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 672,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 391,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 412,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 468,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 474,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 487,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 493,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 497,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 370,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 372,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 378,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 380,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 393,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 401,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 406,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 417,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 430,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 431,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 443,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 454,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 455,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 496,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 500,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 550,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 551,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 629,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 630,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 366,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 527,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 12,
        "good": 29
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/NotificationModal.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 253,
          "column": 8,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 269,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 285,
          "attr": "onDelete"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 308,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 373,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 395,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 176,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 253,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 268,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 275,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 296,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 300,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 358,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 380,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 404,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 163,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 164,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 167,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 178,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 188,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 198,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 199,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 213,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 266,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 267,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 283,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 284,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 408,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 416,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 337,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 405,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 25
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/notifications/RealtimeNotifications.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 123,
          "attr": "onClick"
        }
      ],
      "good": [],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 0
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/onboarding/OnboardingFlow.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 254,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 264,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 269,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 274,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 177,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 181,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 182,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 195,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 231,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 233,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 234,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 247,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 257,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 264,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 270,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 15
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/onboarding/steps/CompletionStep.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 127,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 136,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 105,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/onboarding/steps/FeaturesOverviewStep.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 76,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/onboarding/steps/PreferencesStep.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 85,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 91,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 98,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 125,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 78,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 111,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 144,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 198,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/onboarding/steps/ProfileSetupStep.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 91,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 120,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 133,
          "column": 23
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 105,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 116,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 129,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 142,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 152,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 162,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/payments/PaymentButton.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 84,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 85,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 86,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 87,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 89,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 90,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 92,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 96,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 96,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/payments/PaymentDetails.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 234,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 244,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 259,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 264,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 170,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 180,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 190,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 200,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 205,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 217,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 227,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 273,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 113,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 244,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 258,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 260,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 264,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 268,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 271,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 127,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 201,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 228,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 18
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/payments/PaymentHistory.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 124,
          "column": 6,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 169,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 107,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 118,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 124,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 181,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 111,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 111,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 120,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 184,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 185,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 186,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 187,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 188,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 133,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 13
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierCard.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 40,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 43,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 33,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 41,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 43,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierImportExport.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 59
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 279
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 280
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 335,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 344,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 502,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 519,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 535,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 61,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 317,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 356,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 359,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 376,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 384,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 390,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 413,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 543,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 547,
          "column": 20
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 63,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 275,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 276,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 284,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 299,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 304,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 334,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 354,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 365,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 381,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 420,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 421,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 460,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 478,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 480,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 541,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 542,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 594,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 596,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 597,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 8,
        "good": 30
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierMetricsCard.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 197,
          "column": 30,
          "detail": "Nested ternary expression"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 181,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 197,
          "column": 30
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 56,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/suppliers/SupplierRiskIndicator.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 36,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/atoms/Button.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 23,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 45,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 56,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 67,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/atoms/Button.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 19
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 21,
          "column": 6
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/atoms/Input.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 23,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 45,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 61,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 76,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/atoms/Input.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 15
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 13,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 14,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/atoms/Typography.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 23,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 59,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 76,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/atoms/Typography.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 5
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 5,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/AccessibleModal.test.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 12
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 22
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 29
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 36
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 43
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 13,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 22,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 29,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 36,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 43,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 78,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 93,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 132,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 134,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 148,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 165,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 183,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 195,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 209,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 123,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 5,
        "good": 17
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/AccessibleModal.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 96,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 67,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 68,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 69,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 70,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 72,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 73,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 78,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 83,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 93,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 98,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Alert.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 44,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 43,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 46,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Breadcrumbs.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 26,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 37,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 37,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Card.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 31
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 32,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 34,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 40,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 35,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 36,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 39,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 40,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/ConfirmDialog.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 34,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 37,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 37,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/DataTable.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 84,
          "column": 10,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 71,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 101,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 118,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 127,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 72,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 73,
          "column": 25
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 76,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 77,
          "column": 50
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 84,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 102,
          "column": 25
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 103,
          "column": 27
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 107,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 115,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 99,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 5,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/DetailDialog.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 33,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 21,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 21,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 21,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 23,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 26,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 33,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Dropdown.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 39,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 78,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 55,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 40,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 42,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/FileUploader.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 112,
          "attr": "onKeyDown"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 145,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 156,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 159,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 110,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 111,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 113,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 114,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 115,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 127,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 130,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 132,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 133,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 135,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 140,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 157,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 164,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 169,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 18
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/FilterPanel.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 51,
          "attr": "onSubmit"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 65,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 75,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 90,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 60,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 71,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 85,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 67,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 76,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 91,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 100,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 115,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 116,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/FormField.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 36
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 39,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 27,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 27,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 28,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 28,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 33,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 41,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/FormStepper.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 40,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 47,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 47,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 47,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 48,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 48,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 48,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/LazyLoadedComponent.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 178
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 175,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 177,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 181,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 110,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 138,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 138,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 168,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/LazyLoadedImage.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 138,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 144,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 156,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 129,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 140,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 146,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 147,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 148,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 151,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 152,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/LocationPicker.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 40
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 35,
          "attr": "onInputChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 39,
          "attr": "renderInput"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 43,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 33,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 40,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 40,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 51,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Modal.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 53,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 36,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 40,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 58,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 70,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Notification.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 60,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 62,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Pagination.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 35,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 32,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 29,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 30,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 30,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 39,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 39,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 39,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/ProgressiveForm.test.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 44
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 57,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 76,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 77,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 91,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 92,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 115,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 116,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 141,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 168,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 169,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 195,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 196,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 208,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 232,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 14
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/ProgressiveForm.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 226
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 231,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 206,
          "column": 27
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 230,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 237,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 238,
          "column": 21
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 261,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 264,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 283,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 284,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 290,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 292,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 312,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 260,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 282,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 283,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 286,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 295,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 316,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 317,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 319,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 328,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 20
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/ProgressiveTable.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 119,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 161,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 114,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 144,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 156,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 201,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 72,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 101,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 132,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 143,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 174,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/RichTextEditor.tsx",
      "issues": [
        {
          "category": "securityChecks",
          "name": "dangerouslySetInnerHTML",
          "severity": "warning",
          "message": "Using dangerouslySetInnerHTML - ensure content is sanitized",
          "fix": "Sanitize content or use text content instead",
          "line": 82,
          "column": 8
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 49,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 52,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 55,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 58,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 61,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 64,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 48,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 51,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 54,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 57,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 60,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 63,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 49,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 52,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 55,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 58,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 61,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 64,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 68,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 71,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 80,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 16,
        "warning": null
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/SearchBar.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 79,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 60,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 46,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 47,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 48,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 49,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 51,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 63,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 72,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 91,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/SkeletonScreen.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 594
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 117,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 123,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 139,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 154,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 168,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 173,
          "column": 13
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 178,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 190,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 203,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 206,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 222,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 235,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 252,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 264,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 281,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 297,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 343,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 359,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 371,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 377,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 393,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 479,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 534,
          "column": 15
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 539,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 549,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 120,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 121,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 125,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 126,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 135,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 141,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 148,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 150,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 151,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 156,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 157,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 170,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 171,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 172,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 174,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 183,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 187,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 188,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 189,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 192,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 193,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 205,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 207,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 214,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 227,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 232,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 233,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 237,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 238,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 248,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 250,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 257,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 261,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 262,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 263,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 266,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 267,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 286,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 291,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 292,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 293,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 294,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 295,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 299,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 300,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 309,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 310,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 311,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 312,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 313,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 317,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 318,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 324,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 327,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 328,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 329,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 333,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 345,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 346,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 352,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 353,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 354,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 361,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 362,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 374,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 375,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 379,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 380,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 389,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 396,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 396,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 409,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 413,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 414,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 416,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 418,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 428,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 429,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 434,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 436,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 444,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 447,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 449,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 452,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 455,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 458,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 461,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 475,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 477,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 480,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 487,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 488,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 491,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 492,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 495,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 496,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 499,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 500,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 507,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 510,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 512,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 514,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 515,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 529,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 531,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 532,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 533,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 535,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 540,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 544,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 545,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 546,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 552,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 553,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 554,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 555,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 557,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 144
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/SlideOutPanel.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 23,
          "column": 17
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 26,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 20,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 21,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 26,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 27,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/Tabs.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 54,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 53,
          "column": 21
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 45,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/VideoPlayer.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 31,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 32,
          "column": 13
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 28,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 29,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 30,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 33,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 35,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/charts/BarChart.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 49,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 52,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 46,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 47,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 47,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 47,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 54,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 63,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 66,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 68,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 69,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 14
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/charts/LineChart.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 15,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 16,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 18,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 22,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 22,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 22,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/charts/PieChart.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 95,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 58,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 58,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 67,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 68,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 83,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 84,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 85,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 96,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 96,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 97,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/charts/ScatterChart.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 53,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 56,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 48,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 48,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 51,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 51,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 51,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 54,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 58,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 64,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 68,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 12
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/molecules/forms/AutosaveForm.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 167,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 103,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 141,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 158,
          "column": 20
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 102,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 112,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 135,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 157,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 165,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/Calendar.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 35,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 36,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 37,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/ColorContrastAudit.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 120,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 165,
          "column": 41
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 131,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 146,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 183,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/DataGrid.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 21
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 14,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 15,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/DataTable.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 41,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 42,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 43,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 65,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 67,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 72,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 73,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 74,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 82,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 83,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 87,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 88,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 89,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 93,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 15
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/DocumentViewer.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 26,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 27,
          "column": 15
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 16,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 24,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/DynamicForm.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 51,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 51,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 60,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 69,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/FormBuilder.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 49,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 58,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 67,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/KanbanBoard.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 32
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 42
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 43
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 25,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/LazyDataTable.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 39,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 82,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 94,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 95,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 116,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 117,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 132,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 133,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 150,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 151,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/LazyDataTable.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 187,
          "attr": "onStateChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 36,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 37,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 38,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 137,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 143,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 130,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 139,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 155,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 156,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 157,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 164,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 165,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 166,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 171,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 172,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 173,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 178,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 18
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/organisms/MapView.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 18,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 19,
          "column": 15
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 22,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/patterns/Composition.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 160,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 38,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 40,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 43,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 73,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 74,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 76,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 77,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 81,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 40,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 41,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 43,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 73,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 76,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 77,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 80,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 110,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 111,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 19
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/patterns/Compound.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 81,
          "column": 41
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 83,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 79,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 85,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 106,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 117,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 126,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 127,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/patterns/HOC.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 42
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 101
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 159
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 114,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 156,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 156,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/patterns/Provider.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 82,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 83,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/patterns/RenderProps.tsx",
      "issues": [],
      "good": [
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 56,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 127,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 162,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/ui-library/templates/DashboardLayout.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 78,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 80,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 92,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 123,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 64,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 70,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 72,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 79,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 93,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 97,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 121,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 125,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 12
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/user/EditProfileModal.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 226,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 298,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 299,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 320,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 321,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 342,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 367,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 368,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 397,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 398,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 419,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 420,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 441,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 442,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 463,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 464,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 487,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 513,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 515,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 201,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 202,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 216,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 218,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 228,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 243,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 257,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 258,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 273,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 307,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 329,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 376,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 406,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 428,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 450,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 472,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 492,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 501,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 503,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 521,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 523,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 527,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 199,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 42
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/user/ProfileEditModal.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 277,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 283,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 298,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 441,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 267,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 268,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 282,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 285,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 294,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 321,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 343,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 356,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 370,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 382,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 402,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 430,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 16
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/components/user/UserProfile.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 178,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 180,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 181,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 182,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 186,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 200,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 204,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 226,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 234,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 248,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 327,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 370,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 431,
          "column": 19
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 183,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 184,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 211,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 256,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 266,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 276,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 287,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 296,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 305,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 314,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 324,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 325,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 426,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 430,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 227,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 28
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/hooks/useFocusTrap.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 14,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 86,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 97,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/layouts/MainLayout.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 155,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 109,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 150,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 159,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 100,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 100,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 106,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 107,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 154,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/AIAnalysisPage.jsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 658,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 521,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 648,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 653,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 210,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 278,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 325,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 336,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 482,
          "column": 133
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 514,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 525,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 542,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 550,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 556,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 558,
          "column": 57
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 559,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 566,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 633,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 646,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 651,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 658,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 672,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 677,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 687,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 694,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 701,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 201,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 205,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 272,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 343,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 470,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 473,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 479,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 482,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 490,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 492,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 504,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 506,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 520,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 544,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 552,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 569,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 569,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 585,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 602,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 616,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 628,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 663,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 663,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 326,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 337,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 661,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 49
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/AIAnalysisPage.test.jsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 10,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/DocumentManager.jsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 326,
          "column": 6,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 313,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 390,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 396,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 403,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 408,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 424,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 510,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 524,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 581,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 595,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 610,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 308,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 320,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 326,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 356,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 361,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 384,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 388,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 400,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 446,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 516,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 587,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 600,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 616,
          "column": 22
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 305,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 322,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 365,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 366,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 424,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 442,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 462,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 473,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 486,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 503,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 514,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 524,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 533,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 544,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 557,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 574,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 585,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 595,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 614,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 615,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 401,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 601,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 12,
        "good": 35
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/PerformanceMetricsDashboard.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 162,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 215,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 337,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 390,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 592
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 593
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 594
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 595
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 626
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 162,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 215,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 337,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 390,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 483,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 489,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 493,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 495,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 552,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 553,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 557,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 569,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 575,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 579,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 581,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 628,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 475,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 490,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 532,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 554,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 561,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 562,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 576,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 584,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 585,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 598,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 601,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 604,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 607,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 630,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 9,
        "good": 31
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/Profile.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 252,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 275,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 145,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 272,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 129,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 274,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 276,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 294,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 297,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/not-used/SMSVerification.jsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 224,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 231,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 252,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 266,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 286,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 327,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 443,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 452,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 221,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 223,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 230,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 244,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 280,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 300,
          "column": 53
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 301,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 307,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 319,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 343,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 361,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 226,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 233,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 265,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 285,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 288,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 305,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 308,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 317,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 320,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 331,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 332,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 353,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 371,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 384,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 397,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 410,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 423,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 442,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 453,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 313,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 8,
        "good": 31
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/AIAnalysis.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 72,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 76,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 103,
          "column": 30
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 73,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 74,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 86,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ApplicationMetrics.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 71,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 52,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/BundleOptimizationDemo.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 160,
          "column": 30,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 42
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 44,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 160,
          "column": 30
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 119,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 119,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 127,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 141,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 152,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 154,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 213,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 229,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 230,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 339,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 340,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 348,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 349,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 363,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 17
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ClientDataCachingDemo.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 509,
          "column": 10,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 524,
          "column": 32,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 619,
          "column": 30,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 632,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 128
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 637,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 669,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 687,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 736,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 746,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 130,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 404,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 405,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 485,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 509,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 520,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 524,
          "column": 32
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 560,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 565,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 567,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 599,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 619,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 632,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 782,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 784,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 786,
          "column": 19
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 130,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 397,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 398,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 413,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 414,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 424,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 432,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 434,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 448,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 450,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 466,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 468,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 501,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 502,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 553,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 554,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 577,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 592,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 593,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 650,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 667,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 679,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 686,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 720,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 735,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 745,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 756,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 765,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 775,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 611,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 10,
        "good": 46
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/CodeSplittingDemo.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 60
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 344
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 317,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 326,
          "attr": "importFn"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 62,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 324,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 354,
          "column": 22
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 62,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 235,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 279,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 316,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ComponentsDemo.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 121,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 128,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 129,
          "attr": "onConfirm"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 166,
          "attr": "onRowClick"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 127,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 145,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 146,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 147,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 148,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 149,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 162,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 163,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Dashboard.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 288,
          "column": 32,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 274,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 347,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 158,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 288,
          "column": 32
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 311,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 373,
          "column": 20
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 151,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 260,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 333,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 163,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 295,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 357,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/FormUXDemo.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 54
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 541
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 542
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 543
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 131,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 243,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 268,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 515,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 602,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 641,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 661,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 681,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 748,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 752,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 56,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 548,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 578,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 587,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 58,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 510,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 511,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 535,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 536,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 546,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 558,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 559,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 560,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 561,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 564,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 570,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 582,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 594,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 627,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 640,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 660,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 680,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 746,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 749,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 753,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 756,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 14,
        "good": 26
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Help.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 115,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 126,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 137,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 148,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ImageOptimizationDemo.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 205,
          "column": 25
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 208,
          "column": 25
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 299,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 309,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 325,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 329,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 170,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 173,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 184,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 186,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 200,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 202,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 219,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 221,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 234,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 236,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 246,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 246,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 253,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 253,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 312,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 357,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 358,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 359,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 360,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 361,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 374,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 375,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 376,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 377,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 378,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 31
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/LoadingStatesDemo.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 41
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 114
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 115
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 116
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 117
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 140,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 159,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 172,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 183,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 193,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 197,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 201,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 205,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 212,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 307,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 333,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 364,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 43,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 311,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 337,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 355,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 369,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 372,
          "column": 20
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 45,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 109,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 120,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 138,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 158,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 170,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 182,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 193,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 197,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 201,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 205,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 227,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 228,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 229,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 280,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 441,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 571,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 17,
        "good": 24
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/MicroInteractionsDemo.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 54
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 166
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 167
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 168
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 169
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 151,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 257,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 266,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 274,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 339,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 347,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 355,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 363,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 374,
          "attr": "onComplete"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 491,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 642,
          "attr": "onSubmit"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 56,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 370,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 490,
          "column": 36
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 58,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 150,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 160,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 161,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 172,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 256,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 264,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 273,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 321,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 372,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 467,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 484,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 506,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 520,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 529,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 545,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 680,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 681,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 16,
        "good": 21
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ModalsAndFormsTester.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 296,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 320,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 344,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 368,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 392,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 416,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 429,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 438,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 440,
          "attr": "onSearch"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 448,
          "attr": "onResultClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 459,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 469,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 477,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 481,
          "attr": "onSearch"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 487,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 501,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 505,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 428,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 430,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 437,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 458,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 460,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 461,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 462,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 463,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 468,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 470,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 471,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 478,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 479,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 486,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 488,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 492,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 499,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 506,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 510,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 17,
        "good": 20
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/NotFound.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 36,
          "attr": "onClick"
        }
      ],
      "good": [],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 0
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Profile.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 147,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 252,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 307,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 321,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 325,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ProgressiveLoadingDemo.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 195
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 444
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 445
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 446
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 447
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 448
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 522,
          "attr": "keyExtractor"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 547,
          "attr": "onSubmit"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 197,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 594,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 638,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 681,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 199,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 436,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 443,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 443,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 453,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 495,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 508,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 518,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 520,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 531,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 541,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 542,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 543,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 544,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 562,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 575,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 576,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 577,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 597,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 607,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 619,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 595,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 8,
        "good": 26
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResourcePrioritizationDemo.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 58
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 297,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 324,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 382,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 60,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 274,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 340,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 60,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 244,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 245,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 254,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 265,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 309,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 323,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 332,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 342,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 358,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 374,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 415,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 15
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ResponsiveDesignDemo.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 339,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 343,
          "column": 36,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 386,
          "column": 22,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 428,
          "column": 30,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 57
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 136
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 137
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 138
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 139
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 121,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 59,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 339,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 343,
          "column": 36
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 386,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 428,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 431,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 432,
          "column": 58
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 436,
          "column": 57
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 654,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 61,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 120,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 130,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 131,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 142,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 207,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 212,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 227,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 233,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 246,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 261,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 279,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 305,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 322,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 361,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 481,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 10,
        "good": 25
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/Settings.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 270,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 281,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 292,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 303,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 314,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 341,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 352,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 374,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 385,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 416,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 427,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 438,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 464,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 475,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 486,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 522,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 556,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 571,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 576,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 514,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 516,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 528,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 393,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 496,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 512,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 513,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 530,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 540,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 544,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 555,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 570,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 577,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 19,
        "good": 13
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ai-analysis/AIAnalysisPage.jsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 658,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 521,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 648,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 653,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 210,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 278,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 325,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 336,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 482,
          "column": 133
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 514,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 525,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 542,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 550,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 556,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 558,
          "column": 57
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 559,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 566,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 633,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 646,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 651,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 658,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 672,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 677,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 687,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 694,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 701,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 201,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 205,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 272,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 343,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 470,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 473,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 479,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 482,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 490,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 492,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 504,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 506,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 520,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 544,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 552,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 569,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 569,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 585,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 602,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 616,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 628,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 663,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 663,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 326,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 337,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 661,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 49
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ai-analysis/AIAnalysisPage.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 11,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/ai-analysis/AIAnalysisPage.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 704,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 567,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 694,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 699,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 231,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 234,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 302,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 349,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 360,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 370,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 378,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 528,
          "column": 133
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 560,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 571,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 588,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 596,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 602,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 604,
          "column": 57
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 605,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 608,
          "column": 80
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 612,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 679,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 692,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 697,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 704,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 718,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 723,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 733,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 740,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 747,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 222,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 226,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 296,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 367,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 385,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 516,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 519,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 522,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 525,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 528,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 536,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 538,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 550,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 552,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 566,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 590,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 598,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 615,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 615,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 631,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 648,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 662,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 674,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 709,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 709,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 350,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 361,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 379,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 707,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 55
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/ForgotPassword.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 53,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 32,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 40,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 40,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 42,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 52,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 67,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 84,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 90,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 33,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 79,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/Login.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 166,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 209,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 222,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 229,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 257,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 292,
          "attr": "onError"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 325,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 130,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 193,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 219,
          "column": 19
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 233,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 281,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 148,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 156,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 163,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 195,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 199,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 208,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 211,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 221,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 224,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 231,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 256,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 259,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 265,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 279,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 301,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 324,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 326,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 327,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 328,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 329,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 7,
        "good": 25
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/Register.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 274,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 308,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 410,
          "attr": "onError"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 178,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 195,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 196,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 217,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 218,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 240,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 241,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 259,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 263,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 264,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 278,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 293,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 297,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 298,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 312,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 330,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 331,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 346,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 363,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 378,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 379,
          "column": 29
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 399,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 180,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 204,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 226,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 249,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 276,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 283,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 310,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 317,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 339,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 357,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 387,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 419,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 34
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/ResendVerification.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 74,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 92,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 58,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 64,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 103,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 60,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 91,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 93,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 109,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 119,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/ResetPassword.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 99,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 105,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 124,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 66,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 76,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 82,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 95,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 108,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 121,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 135,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 78,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 88,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 98,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 123,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 142,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 71,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 13
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/SecuritySettings.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 133,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 171,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 201,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 210,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 232,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 253,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 266,
          "attr": "onCancel"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 273,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 298,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 305,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 328,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 380,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 399,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 408,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 181,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 185,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 196,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 219,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 263,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 279,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 320,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 341,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 347,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 416,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 419,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 426,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 132,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 265,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 272,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 281,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 297,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 300,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 310,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 315,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 327,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 343,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 362,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 372,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 398,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 401,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 414,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 421,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 348,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 389,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 14,
        "good": 30
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/auth/VerifyEmail.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 52,
          "column": 10,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 67,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 52,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 78,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 85,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 96,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/calendar/CalendarPage.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 401,
          "column": 10,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 365,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 394,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 410,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 441,
          "attr": "eventContent"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 472,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 605,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 613,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 623,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 686,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 693,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 701,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 709,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 740,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 750,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 762,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 377,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 390,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 401,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 458,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 477,
          "column": 45
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 480,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 547,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 562,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 600,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 607,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 614,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 647,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 650,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 656,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 661,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 669,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 675,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 722,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 725,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 733,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 770,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 373,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 374,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 383,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 423,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 424,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 425,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 471,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 489,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 503,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 507,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 507,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 518,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 529,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 549,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 564,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 579,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 591,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 601,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 606,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 613,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 693,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 702,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 709,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 764,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 768,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 615,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 648,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 654,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 723,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 16,
        "good": 50
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/ComponentDetail.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 119,
          "column": 16,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 47
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 104,
          "attr": "onBack"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 234,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 243,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 251,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 49,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 119,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 270,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 276,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 49,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 78,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 131,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 132,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 156,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 268,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 270,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 274,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 276,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 13
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/ComponentList.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 23,
          "attr": "onClick"
        }
      ],
      "good": [],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 0
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/ComponentRelationshipVisualization.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 26,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 59,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/CreateComponent.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 20,
          "attr": "onBack"
        }
      ],
      "good": [],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 0
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/DocumentationManager.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 285,
          "column": 19,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 323,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 253,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 358,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 363,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 378,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 462,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 474,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 549,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 260,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 285,
          "column": 19
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 314,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 323,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 344,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 451,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 539,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 238,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 268,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 269,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 282,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 284,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 378,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 387,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 397,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 410,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 427,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 438,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 455,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 464,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 474,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 483,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 493,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 506,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 523,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 533,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 551,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 265,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 9,
        "good": 28
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/EditComponent.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 20,
          "attr": "onBack"
        }
      ],
      "good": [],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 0
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/components/RevisionHistory.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 153,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 209,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 225,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 236,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 247,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 266,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 274,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 331,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 345,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 387,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 388,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 160,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 212,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 221,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 232,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 243,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 261,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 351,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 73,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 138,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 165,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 274,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 283,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 294,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 305,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 319,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 333,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 344,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 11,
        "good": 17
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CreateCustomer.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 229,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 488,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 618,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 304,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 321,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 338,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 495,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 501,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 628,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 238,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 255,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 268,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 282,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 293,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 315,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 332,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 357,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 371,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 392,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 404,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 416,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 436,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 446,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 456,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 466,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 509,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 519,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 529,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 539,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 549,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 571,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 581,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 591,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 602,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 626,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 640,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 644,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 502,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 36
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerDetail.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 172
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 306,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 322,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 346,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 588,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 602,
          "attr": "onRowClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 614,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 627,
          "attr": "onRowClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 652,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 662,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 174,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 515,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 538,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 550,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 176,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 279,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 287,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 302,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 354,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 363,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 382,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 383,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 397,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 406,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 558,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 574,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 582,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 595,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 596,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 608,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 621,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 622,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 633,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 645,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 651,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 653,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 654,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 661,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 663,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 674,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 678,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 342,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 516,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 539,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 551,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 10,
        "good": 35
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/CustomerList.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 215,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 240,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 247,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 254,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 324,
          "attr": "getRowId"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 349,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 357,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 390,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 399,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 215,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 293,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 302,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 354,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 403,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 276,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 278,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 286,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 295,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 322,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 323,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 348,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 350,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 356,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 361,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 389,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 402,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 402,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 412,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 415,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 9,
        "good": 20
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/EditCustomer.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 316,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 340,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 720,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 415,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 432,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 449,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 597,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 603,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 730,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 312,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 349,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 366,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 379,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 393,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 404,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 426,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 443,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 468,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 482,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 503,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 513,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 525,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 543,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 553,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 563,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 573,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 583,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 595,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 611,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 621,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 631,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 641,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 651,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 673,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 683,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 693,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 704,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 728,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 742,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 746,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 604,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 38
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/components/CustomerFormModal.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 554,
          "column": 10,
          "detail": "Nested ternary expression"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 311,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 315,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 385,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 404,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 554,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 304,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 305,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 320,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 337,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 340,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 351,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 365,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 432,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 451,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 464,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 494,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 504,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 514,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 524,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 534,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 543,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 22
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/customers/components/CustomerOrderList.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 275,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 283,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 291,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 363,
          "attr": "getRowId"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 388,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 397,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 304,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 307,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 332,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 341,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 314,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 316,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 324,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 334,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 360,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 361,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 362,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 387,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 400,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 13
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/Dashboard.test.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 124,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 131,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 131,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 154,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 167,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 167,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 173,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 173,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 187,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 187,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 196,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 196,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 207,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 207,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 15
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/Dashboard.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 182,
          "column": 17,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 196,
          "column": 19,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 198
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 310,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 314,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 318,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 322,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 182,
          "column": 17
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 196,
          "column": 19
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 413,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 421,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 181,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 195,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 213,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 223,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 223,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 224,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 279,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 296,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 305,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 306,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 307,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 346,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 359,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 372,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 385,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 394,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 395,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 7,
        "good": 21
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/MetricsDashboard.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 21,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/dashboard/QualityMetricsDashboard.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 111
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 311
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 312
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 313
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 410,
          "attr": "label"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 419,
          "attr": "formatter"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 462,
          "attr": "formatter"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 113,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 229,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 233,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 247,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 262,
          "column": 63
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 279,
          "column": 63
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 296,
          "column": 63
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 317,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 115,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 215,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 217,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 230,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 239,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 240,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 249,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 310,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 310,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 324,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 396,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 448,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 322,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 7,
        "good": 21
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/FeedbackManagement.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 269,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 274,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 306,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 312,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 484,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 335,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 342,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 353,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 515,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 529,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 537,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 598,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 606,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 619,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 636,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 653,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 673,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 684,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 695,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 714,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 269,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 274,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 306,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 312,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 484,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 591,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 592,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 711,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 722,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 391,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 548,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 549,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 550,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 551,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 552,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 553,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 554,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 555,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 556,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 580,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 581,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 597,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 701,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 704,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 713,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 715,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 716,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 717,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 722,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 20,
        "good": 29
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/feedback/components/FeedbackDetail.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 189,
          "column": 22,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 199,
          "column": 22,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 210,
          "column": 22,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 297,
          "column": 16,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 259,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 393,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 401,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 475,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 508,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 538,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 554,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 569,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 598,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 189,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 199,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 210,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 217,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 237,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 248,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 280,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 285,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 297,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 308,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 313,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 318,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 324,
          "column": 69
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 332,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 349,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 366,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 368,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 381,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 419,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 452,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 463,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 493,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 495,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 497,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 500,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 502,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 509,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 530,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 591,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 592,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 593,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 596,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 256,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 392,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 400,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 421,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 474,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 485,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 485,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 494,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 501,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 515,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 521,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 537,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 553,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 584,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 584,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 602,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 605,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 298,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 307,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 13,
        "good": 51
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ConductInspection.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 352,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 369,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 379,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 400,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 456,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 457,
          "attr": "onOpen"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 462,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 470,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 477,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 484,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 491,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 518,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 642,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 669,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 696,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 726,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 747,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 755,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 365,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 409,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 422,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 472,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 479,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 486,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 493,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 499,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 526,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 538,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 583,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 591,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 601,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 604,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 617,
          "column": 19
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 625,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 677,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 737,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 766,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 775,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 803,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 858,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 870,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 894,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 912,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 411,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 413,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 414,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 427,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 432,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 442,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 455,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 615,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 616,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 618,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 862,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 873,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 882,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 884,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 898,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 899,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 916,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 933,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 936,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 500,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 776,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 18,
        "good": 46
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionDetail.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 435,
          "column": 30,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 127
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 247,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 263,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 335,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 478,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 630,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 129,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 340,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 435,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 524,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 546,
          "column": 19
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 602,
          "column": 20
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 131,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 243,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 281,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 290,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 302,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 344,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 354,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 376,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 377,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 387,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 541,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 552,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 590,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 600,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 629,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 631,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 642,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 646,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 276,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 331,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 525,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 7,
        "good": 27
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/InspectionList.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 223,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 243,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 276,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 283,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 290,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 359,
          "attr": "getRowId"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 384,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 392,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 418,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 427,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 223,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 243,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 328,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 337,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 389,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 431,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 311,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 313,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 321,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 330,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 357,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 358,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 383,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 385,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 391,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 396,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 417,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 430,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 430,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 440,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 443,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 10,
        "good": 21
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/ScheduleInspection.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 414
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 432
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 318,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 409,
          "attr": "getOptionLabel"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 411,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 412,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 427,
          "attr": "getOptionLabel"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 429,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 430,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 523,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 365,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 384,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 410,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 428,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 533,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 327,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 344,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 357,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 376,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 389,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 393,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 426,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 449,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 463,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 482,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 513,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 531,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 545,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 549,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 10,
        "good": 19
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/inspections/components/InspectionFormModal.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 521,
          "column": 10,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 489
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 496
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 484,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 485,
          "attr": "renderTags"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 494,
          "attr": "renderInput"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 293,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 297,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 340,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 359,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 415,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 521,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 286,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 287,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 302,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 319,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 382,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 386,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 407,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 427,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 446,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 460,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 473,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 488,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 490,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 510,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 20
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/BackupVerification.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 175,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 195,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 297,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 337,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 353,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 400,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 194,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 200,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 207,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 219,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 220,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 221,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 223,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 262,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 288,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 316,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 356,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 369,
          "column": 59
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 375,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 381,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 387,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 174,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 186,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 187,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 196,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 258,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 259,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 276,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 319,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 353,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 205,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 317,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 26
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/ErrorAnalyticsPage.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 29,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 35,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/PerformanceMetricsDashboard.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 40
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 162
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 163
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 164
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 165
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 166
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 43,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 139,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 43,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 129,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 132,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 141,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 145,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 156,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 157,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 171,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 175,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 176,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 181,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 182,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 183,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 184,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 191,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 193,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 194,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 199,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 201,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 202,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 203,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 204,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 209,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 220,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 26
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/monitoring/UserAnalyticsPage.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 29,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 35,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/payments/PaymentCancelPage.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 45,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 52,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 36,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/payments/PaymentDetailPage.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 25,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 59,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 67,
          "attr": "onRefund"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 66,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/payments/PaymentPage.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 34
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 36,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 36,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 56,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 57,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 69,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 73,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 77,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/payments/PaymentSuccessPage.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 62,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 69,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 39,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 53,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 55,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 45,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/DataVisualization.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 51,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 64,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 77,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/DataVisualizationDemo.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 257,
          "column": 20,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 263,
          "column": 31,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 270,
          "column": 25,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 273,
          "column": 25,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 351,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 257,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 263,
          "column": 31
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 270,
          "column": 25
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 273,
          "column": 25
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 209,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 211,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 225,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 226,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 236,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 237,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 262,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 266,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 268,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 269,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 276,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 283,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 287,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 288,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 289,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 300,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 301,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 302,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 5,
        "good": 22
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/ReportBuilder.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 57
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 278,
          "attr": "onBack"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 364,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 398,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 409,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 425,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 439,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 59,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 291,
          "column": 23
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 323,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 384,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 404,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 436,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 460,
          "column": 19
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 59,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 284,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 285,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 300,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 306,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 313,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 314,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 315,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 320,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 328,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 335,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 342,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 349,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 356,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 373,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 374,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 375,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 376,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 377,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 382,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 397,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 415,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 424,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 436,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 445,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 456,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 459,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 7,
        "good": 34
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportPreview.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 300,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 312,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 314,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 321,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 330,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 336,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 383,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 256,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 266,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 272,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 279,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 288,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 290,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 292,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 298,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 298,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 315,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 332,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 356,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 357,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 372,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 390,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 22
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateForm.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 340
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 354
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 365
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 384,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 387,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 429,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 556,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 616,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 694,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 719,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 319,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 330,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 363,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 382,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 410,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 413,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 419,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 421,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 431,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 531,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 574,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 575,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 576,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 577,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 578,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 584,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 601,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 628,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 638,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 644,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 651,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 679,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 242,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 255,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 260,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 270,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 272,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 288,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 292,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 302,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 303,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 323,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 336,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 348,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 349,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 407,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 408,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 418,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 428,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 430,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 432,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 433,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 529,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 529,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 542,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 590,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 626,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 738,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 744,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 602,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 680,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 10,
        "good": 51
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/reports/components/ReportTemplateList.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 233,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 202,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 209,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 212,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 254,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 265,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 267,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 311,
          "column": 54
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 170,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 171,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 187,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 189,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 294,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 295,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 324,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 325,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 326,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 327,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 255,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 18
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAudit.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 21
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 72
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 73
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 23,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 25,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 66,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 67,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 77,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 6
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/AccessibilityAuditPage.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 208,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 269,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 49
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 156
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 157
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 158
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 159
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 160
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 161
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 178,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 353,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 362,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 371,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 380,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 397,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 406,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 415,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 424,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 51,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 208,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 211,
          "column": 62
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 269,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 272,
          "column": 80
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 53,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 150,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 151,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 164,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 177,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 186,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 191,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 202,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 217,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 252,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 263,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 278,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 309,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 323,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 337,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 18,
        "good": 20
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/LanguageSettings.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 53,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 74,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 70,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 80,
          "column": 14
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/settings/SettingsPage.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 44
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 116
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 134,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 135,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 47,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 92,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 93,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 133,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 94,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 95,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 112,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 125,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 125,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 125,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/CreateSupplier.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 548
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 556
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 575
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 583
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 320,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 543,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 544,
          "attr": "renderTags"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 554,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 570,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 571,
          "attr": "renderTags"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 581,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 618,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 394,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 413,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 628,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 329,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 346,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 349,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 360,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 374,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 386,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 405,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 423,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 442,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 454,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 466,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 486,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 496,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 506,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 516,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 526,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 541,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 547,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 568,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 574,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 608,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 626,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 640,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 644,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 12,
        "good": 27
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EditSupplier.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 602
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 610
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 629
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 637
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 351,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 375,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 597,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 598,
          "attr": "renderTags"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 608,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 624,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 625,
          "attr": "renderTags"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 635,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 672,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 448,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 467,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 682,
          "column": 18
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 347,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 384,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 401,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 414,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 428,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 440,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 459,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 477,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 496,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 508,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 520,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 540,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 550,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 560,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 570,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 580,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 595,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 601,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 622,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 628,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 662,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 680,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 694,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 698,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 13,
        "good": 27
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/EnhancedSupplierList.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 391,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 209,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 254,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 259,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 271,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 287,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 295,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 302,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 342,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 367,
          "attr": "onMouseEnter"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 379,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 389,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 406,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 418,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 430,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 466,
          "attr": "labelDisplayedRows"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 476,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 479,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 488,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 497,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 510,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 523,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 538,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 551,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 231,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 251,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 324,
          "column": 34
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 325,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 336,
          "column": 32
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 338,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 341,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 345,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 347,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 391,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 393,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 394,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 444,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 270,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 326,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 369,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 372,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 378,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 460,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 461,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 462,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 463,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 464,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 474,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 509,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 525,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 537,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 553,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 252,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 265,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 24,
        "good": 30
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAnalyticsPage.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 41
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 133
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 134
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 171,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 174,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 178,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 43,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 165,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 177,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 45,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 127,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 128,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 137,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 140,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 158,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 123,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierAuditChecklist.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 260,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 276,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 340,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 347,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 353,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 401,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 410,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 439,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 559,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 574,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 587,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 599,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 630,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 644,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 662,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 259,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 275,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 335,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 354,
          "column": 25
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 419,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 433,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 453,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 455,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 468,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 558,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 580,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 605,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 652,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 231,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 243,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 256,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 272,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 293,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 311,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 324,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 336,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 363,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 421,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 427,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 428,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 429,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 447,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 447,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 457,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 458,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 459,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 460,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 461,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 462,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 463,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 481,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 494,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 555,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 574,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 590,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 598,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 654,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 15,
        "good": 42
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierCreate.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 277,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 275,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 285,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 286,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 287,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 290,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 325,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 328,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierDetail.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 92
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 296,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 351,
          "attr": "onBack"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 357,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 596,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 741,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 754,
          "attr": "onRowClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 778,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 795,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 95,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 415,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 451,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 458,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 473,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 486,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 497,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 508,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 519,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 527,
          "column": 27
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 551,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 569,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 603,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 638,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 665,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 670,
          "column": 34
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 684,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 689,
          "column": 34
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 761,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 766,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 812,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 96,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 292,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 365,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 374,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 393,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 394,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 409,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 573,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 574,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 606,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 631,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 711,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 735,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 748,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 749,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 750,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 759,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 761,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 764,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 771,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 791,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 794,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 804,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 807,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 353,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 9,
        "good": 46
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierEdit.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 344,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 371,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 369,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 379,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 380,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 381,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 384,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 418,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 421,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 8
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierList.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 505,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 533,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 549,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 565,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 583,
          "attr": "onClose"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 590,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 135,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 442,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 472,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 144,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 167,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 185,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 394,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 403,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 412,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 421,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 430,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 440,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 449,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 450,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 451,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 452,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 453,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 455,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 470,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 472,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 477,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 478,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 481,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 483,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 504,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 506,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 511,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 518,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 521,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 582,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 584,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 589,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 591,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 35
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierQualityManagement.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 24,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 1
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/SupplierRiskAssessment.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 282,
          "column": 16,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 130,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 140,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 196,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 209,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 287,
          "attr": "onViewDetails"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 308,
          "attr": "onClose"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 105,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 170,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 182,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 236,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 244,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 248,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 275,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 282,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 93,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 107,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 118,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 119,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 120,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 121,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 129,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 132,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 139,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 153,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 154,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 173,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 174,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 175,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 176,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 195,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 208,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 222,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 232,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 286,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 307,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 309,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 310,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 311,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 7,
        "good": 32
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/AssessmentCard.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 61,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 129,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 142,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 149,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 157,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 162,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 163,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 165,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 96,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 161,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/AuditChecklist.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 327,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 426,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 181,
          "column": 40
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 229,
          "column": 37
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 258,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 314,
          "column": 45
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 419,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 425,
          "column": 22
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 144,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 145,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 153,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 155,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 207,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 236,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 237,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 238,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 239,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 240,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 241,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 263,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 326,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 345,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 345,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 355,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 366,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 370,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 370,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 384,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 403,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 415,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 437,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 441,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 197,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 31
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/ChecklistItemCard.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 136,
          "column": 14,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 174,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 298,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 424,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 448,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 509,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 524,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 572,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 136,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 261,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 282,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 284,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 306,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 311,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 318,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 335,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 417,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 423,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 444,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 455,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 508,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 542,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 568,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 583,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 594,
          "column": 22
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 194,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 208,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 221,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 225,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 225,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 226,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 286,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 289,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 295,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 305,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 332,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 348,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 360,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 364,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 364,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 378,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 392,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 411,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 466,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 470,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 470,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 482,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 495,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 533,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 548,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 283,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 285,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 294,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 8,
        "good": 45
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/EnhancedDataTableDemo.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 280,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 286,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 292,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 298,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 304,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 310,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 349,
          "column": 28
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 89,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 124,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 124,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 138,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 280,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 286,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 292,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 298,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 304,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 310,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 317,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 320,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 330,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 331,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 338,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 339,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 340,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 341,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 342,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 343,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 344,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 345,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 346,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 348,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 350,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 351,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 27
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/EnhancedSupplierForm.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 245,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 256,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 278,
          "attr": "onCancel"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 265,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 244,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 255,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 274,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 275,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 285,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 286,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 3,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/QualityManagement.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 69
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 433,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 569,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 739,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 71,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 250,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 256,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 262,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 270,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 279,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 324,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 336,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 344,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 404,
          "column": 51
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 406,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 414,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 418,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 425,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 478,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 561,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 579,
          "column": 35
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 584,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 588,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 620,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 71,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 248,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 357,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 387,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 395,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 472,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 481,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 555,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 614,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 623,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 657,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 671,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 681,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 681,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 713,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 716,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 719,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 722,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 729,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 729,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 738,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 743,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 744,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 749,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 749,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 760,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 770,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 785,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 801,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 805,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 807,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 817,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 817,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 828,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 838,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 848,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 867,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 877,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 881,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 883,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 380,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 465,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 548,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 577,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 607,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 65
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/RiskFactorCard.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 104,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 137,
          "column": 12,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 96,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 126,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 89,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 104,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 137,
          "column": 12
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 101,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 117,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 122,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 129,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 4,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/RiskFactorsList.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 89,
          "attr": "onChange"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 75,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 78,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 101,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 88,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 98,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 103,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 107,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 134,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 135,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 137,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 138,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 12
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SaveConfirmationDialog.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 52,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 56,
          "column": 27
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 78,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 79,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 80,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 81,
          "column": 40
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 94,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 85,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 89,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalytics.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 364,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 368,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 426,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 449,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 472,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 127,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 280,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 282,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 296,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 308,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 318,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 331,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 355,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 387,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 387,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 401,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 401,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 418,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 427,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 450,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 473,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 21
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierAnalyticsDashboard.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 220,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 245,
          "column": 20,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 252,
          "column": 56,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 288,
          "column": 54,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 323,
          "column": 54,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 344,
          "column": 18,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 506,
          "column": 8,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 70
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 536
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 537
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 538
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 72,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 220,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 245,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 249,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 252,
          "column": 56
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 256,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 274,
          "column": 41
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 282,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 285,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 288,
          "column": 54
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 292,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 309,
          "column": 43
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 317,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 320,
          "column": 16
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 323,
          "column": 54
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 327,
          "column": 22
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 344,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 362,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 506,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 550,
          "column": 14
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 74,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 217,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 389,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 399,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 431,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 478,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 479,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 489,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 489,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 494,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 499,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 517,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 530,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 531,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 542,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 543,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 546,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 676,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 677,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 521,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 11,
        "good": 40
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierComparisonTool.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 318,
          "column": 24,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 344,
          "column": 28,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 447,
          "column": 10,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 391
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 296,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 388,
          "attr": "getOptionLabel"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 389,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 398,
          "attr": "isOptionEqualToValue"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 293,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 318,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 344,
          "column": 28
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 447,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 462,
          "column": 16
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 285,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 308,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 310,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 343,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 370,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 370,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 375,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 397,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 407,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 408,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 423,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 424,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 438,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 439,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 457,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 463,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 463,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 465,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 465,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 460,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 8,
        "good": 25
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierFormModal.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 516,
          "column": 10,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 483
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 490
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 478,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 479,
          "attr": "renderTags"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 488,
          "attr": "renderInput"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 314,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 318,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 388,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 407,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 516,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 307,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 308,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 323,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 340,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 343,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 354,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 368,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 417,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 436,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 449,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 461,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 476,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 482,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 484,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 505,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 6,
        "good": 20
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierNetwork.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 385,
          "attr": "renderValue"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 470,
          "attr": "nodeVal"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 471,
          "attr": "nodeLabel"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 472,
          "attr": "nodeColor"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 473,
          "attr": "linkColor"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 474,
          "attr": "linkWidth"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 477,
          "attr": "nodeCanvasObjectMode"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 478,
          "attr": "nodeCanvasObject"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 497,
          "attr": "onEngineStop"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 446,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 452,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 465,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 539,
          "column": 10
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 361,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 362,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 382,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 383,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 389,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 408,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 409,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 422,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 423,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 430,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 448,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 467,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 468,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 514,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 555,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 583,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 9,
        "good": 20
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierPerformanceCharts.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 623,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 558,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 560,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 575,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 577,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 578,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 579,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 580,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 586,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 588,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 589,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 590,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 591,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 597,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 599,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 600,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 601,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 602,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 608,
          "column": 8
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 610,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 611,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 612,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 613,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 618,
          "column": 6
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 484,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 506,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 506,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 516,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 516,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 527,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 529,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 557,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 566,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 566,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 577,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 577,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 578,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 578,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 579,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 579,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 580,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 580,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 588,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 588,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 589,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 589,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 590,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 590,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 591,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 591,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 599,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 599,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 600,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 600,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 601,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 601,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 602,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 602,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 610,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 610,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 611,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 611,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 612,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 612,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 613,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 613,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 576,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 587,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 598,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 609,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 69
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierQualification.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 179,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 264,
          "column": 26,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 118,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 135,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 228,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 249,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 357,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 179,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 188,
          "column": 20
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 215,
          "column": 18
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 264,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 285,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 297,
          "column": 14
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 326,
          "column": 24
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 338,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 384,
          "column": 26
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 395,
          "column": 8
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 108,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 208,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 259,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 322,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 377,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 283,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 286,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 7,
        "good": 17
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/suppliers/components/SupplierSelector.tsx",
      "issues": [
        {
          "category": "expressionChecks",
          "name": "Complex expressions in JSX",
          "severity": "info",
          "message": "Complex expressions in JSX reduce readability",
          "fix": "Extract complex expressions to variables or functions",
          "line": 97,
          "column": 20,
          "detail": "Nested ternary expression"
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 66
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 75
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 60,
          "attr": "getOptionLabel"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 62,
          "attr": "onChange"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 64,
          "attr": "renderInput"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 74,
          "attr": "renderOption"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 91,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 97,
          "column": 20
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 59,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 61,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 63,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 7,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/pages/user/UserSettings.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 499,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 218,
          "column": 10
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 517,
          "column": 19
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 215,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 216,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 240,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 293,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 322,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 487,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 512,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 516,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 10
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/test-utils/CustomQueryParamProvider.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 17,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 17,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 18,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/test-utils/advanced-router-example.test.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 47,
          "attr": "onClick"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 50,
          "attr": "onClick"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 32,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 43,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/test-utils/advanced-router-wrapper.tsx",
      "issues": [],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 132,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 138,
          "column": 30
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 205,
          "column": 12
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 211,
          "column": 32
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 128,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 129,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 129,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 133,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 133,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 136,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 139,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 144,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 201,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 202,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 202,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 206,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 206,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 209,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 212,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 217,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 20
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/test-utils/combined-wrapper.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 28,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 29,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 29,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 49,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 50,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 51,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 9
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/test-utils/router-wrapper.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 24,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 24,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 26,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 26,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 43,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 43,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/test-utils/test-setup.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 16,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 17,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/test-utils/theme-wrapper.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 21,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 21,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 33,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 33,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/theme/ThemeProvider.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 124,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 125,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 127,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/utils/accessibility.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 278,
          "attr": "onFocus"
        },
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 281,
          "attr": "onBlur"
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 113,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 113,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 319,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 321,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 323,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 5
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/utils/codeSplitting.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 296
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 42,
          "column": 6
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 257,
          "column": 4
        },
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 295,
          "column": 25
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 41,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 44,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 258,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 7
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/utils/lazyRoute.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 50
        },
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 51
        }
      ],
      "good": [
        {
          "category": "expressionChecks",
          "name": "Conditional rendering",
          "severity": "good",
          "message": "Good use of conditional rendering",
          "line": 29,
          "column": 4
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 23,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 2,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/utils/progressiveLoading.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 244
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 237,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 239,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 240,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 241,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 242,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 243,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 368,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 369,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 370,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 371,
          "detail": "Using React Fragment"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 377,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 11
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/client/src/utils/serviceWorkerUtils.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 41,
          "detail": "Safe user input rendering"
        },
        {
          "category": "structureChecks",
          "name": "Fragment usage",
          "severity": "good",
          "message": "Good use of React Fragments",
          "line": 37,
          "detail": "Using React Fragment"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 4
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/src/contexts/ThemeContext.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 33,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 34,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/src/pages/suppliers/CreateSupplier.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 56,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 60,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 67,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/src/pages/suppliers/EditSupplier.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 80,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 84,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 91,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 3
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/src/pages/suppliers/SupplierAuditChecklist.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 31,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 38,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/src/pages/suppliers/SupplierDetail.tsx",
      "issues": [],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 19,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 22,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 0,
        "good": 2
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/src/pages/user/UserSettings.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Inline functions",
          "severity": "info",
          "message": "Inline function definitions in JSX can impact performance",
          "fix": "Extract functions outside render or use useCallback",
          "line": 100,
          "attr": "onClick"
        }
      ],
      "good": [],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 0
      }
    },
    {
      "file": "/Users/tannercoker/AeroSuite-main-1/src/utils/codeSplitting.tsx",
      "issues": [
        {
          "category": "bestPractices",
          "name": "Props spreading",
          "severity": "info",
          "message": "Avoid excessive props spreading",
          "fix": "Be explicit about which props to pass",
          "line": 41
        }
      ],
      "good": [
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 39,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 40,
          "detail": "Safe user input rendering"
        },
        {
          "category": "securityChecks",
          "name": "User input in JSX",
          "severity": "good",
          "message": "User input is safely rendered in JSX",
          "line": 81,
          "detail": "Safe user input rendering"
        }
      ],
      "stats": {
        "errors": 0,
        "warnings": 0,
        "info": 1,
        "good": 3
      }
    }
  ],
  "timestamp": "2025-08-21T22:11:04.175Z"
}